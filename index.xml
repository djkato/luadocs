<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on darktable lua documentation</title>
    <link>https://darktable-org.github.io/luadocs/</link>
    <description>Recent content in Home on darktable lua documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://darktable-org.github.io/luadocs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>api_version</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/api_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/api_version/</guid>
      <description>ðŸ”—Name api_version.lua - show the Lua API version
ðŸ”—Description darktable script to show the Lua API version in the preferences
ðŸ”—Usage  start this script from script manager. darktable must be running in lua debug mode in a terminal to see the output.  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>AutoGrouper</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/autogrouper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/autogrouper/</guid>
      <description>ðŸ”—Name AutoGrouper.lua - automatically group images based on time
ðŸ”—Description This plugin groups images based on the time they were shot. Images shot close together in time are grouped together. The interval of time to separate groups is configurable.
ðŸ”—Usage Start the module using script manager.
Set a gap amount, in seconds, which will be used to determine when images should no longer be added to a group. If an image is more then the specified amount of time from the last image in the group it will not be added.</description>
    </item>
    
    <item>
      <title>check_for_updates</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/check_for_updates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/check_for_updates/</guid>
      <description>ðŸ”—Name check_for_updates.lua - automatically check for updates
ðŸ”—Description a simple script that will automatically look for newer releases on github and inform when there is something. it will only check on startup and only once a week.
ðŸ”—Usage  install luasec and cjson for Lua 5.3 on your system. Luarocks is a good source for lua packages. start this script from script manager restart darktable  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus</description>
    </item>
    
    <item>
      <title>darktable.gui overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/overview/</guid>
      <description>This subtable contains function and data to manipulate the darktable user interface with Lua. Most of these function won&amp;rsquo;t do anything if the GUI is not enabled (i.e you are using the command line version darktable-cli instead of darktable).</description>
    </item>
    
    <item>
      <title>darktable.gui.libs overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/overview/</guid>
      <description>This table allows referencing all lib objects. lib objects are the graphical blocks within each view. To quickly figure out which lib is which, you can use the following code, which will make a given lib blink.
local dt = require &amp;quot;darktable&amp;quot; local tested_module=&amp;quot;global_toolbox&amp;quot; dt.gui.libs[tested_module].visible=false dt.control.sleep(2000) while true do dt.gui.libs[tested_module].visible = not dt.gui.libs[tested_module].visible dt.control.sleep(2000) end </description>
    </item>
    
    <item>
      <title>darktable.gui.views overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/overview/</guid>
      <description>The different views in darktable</description>
    </item>
    
    <item>
      <title>details</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/details/</guid>
      <description>ðŸ”—NAME dtutils.debug
ðŸ”—SYNOPSIS debugging helpers used in developing darktable lua scripts
ðŸ”—USAGE require &amp;quot;lib/dtutils.debug&amp;quot; ðŸ”—DESCRIPTION dtutils.debug provides an interface to the darktable debugging routines.
ðŸ”—RETURN VALUE dd - library - the darktable lua debugging helpers
ðŸ”—FUNCTIONS ðŸ”—dprint pass a variable to darktable.debug.dump and print the results to stdout
ðŸ”—new_tracepoint create a function returning a tracepoint
ðŸ”—terse_dump set darktable.debug.known to shorten all image dumps to a single line
ðŸ”—tracepoint print out a tracepoint and dump the arguments</description>
    </item>
    
    <item>
      <title>details</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/details/</guid>
      <description>ðŸ”—NAME details
ðŸ”—SYNOPSIS common darktable lua file functions
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; ðŸ”—DESCRIPTION The dtutils.file library provides common file manipulation functions used in constructing darktable lua scripts
ðŸ”—RETURN VALUE df - library - the file functions
ðŸ”—FUNCTIONS ðŸ”—check_if_bin_exists check if an executable exists
ðŸ”—check_if_file_exists check if a file or path exist
ðŸ”—chop_filetype remove a filetype from a filename
ðŸ”—create_unique_filename create a unique filename from the supplied argment
ðŸ”—executable_path_widget create a widget to get executable path preferences</description>
    </item>
    
    <item>
      <title>details</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/details/</guid>
      <description>ðŸ”—NAME dtutils.log
ðŸ”—SYNOPSIS darktable lua logging library
ðŸ”—USAGE local log = require &amp;quot;lib/dtutils.log&amp;quot; ðŸ”—DESCRIPTION log provides a multi-level logging solution for use with the darktable lua scripts. With this library you can leave log messages scattered through out your code and only turn them on as necessary.
ðŸ”—RETURN VALUE log - library - the darktable lua logging functions
ðŸ”—FUNCTIONS ðŸ”—caller get the name and line number of the calling routine</description>
    </item>
    
    <item>
      <title>details</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/details/</guid>
      <description>ðŸ”—DTUTILS.STRING ðŸ”—NAME dtutils.string
ðŸ”—SYNOPSIS a library of string utilities for use in darktable lua scripts
ðŸ”—USAGE local ds = require &amp;quot;lib/dtutils.string&amp;quot; ðŸ”—DESCRIPTION This library contains string manipulation routines to aid in building darktable lua scripts.
ðŸ”—RETURN VALUE ds - library - the darktable lua string library
ðŸ”—FUNCTIONS ðŸ”—escape_xml_characters escape characters for xml documents
ðŸ”—is_not_sanitized check if a string has been sanitized
ðŸ”—sanitize surround a string in quotes making it safe to pass as an argument</description>
    </item>
    
    <item>
      <title>details</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/details/</guid>
      <description>ðŸ”—DTUTILS.SYSTEM ðŸ”—NAME dtutils.system
ðŸ”—SYNOPSIS a library of system utilities for use in darktable lua scripts
ðŸ”—USAGE local dtsys = require &amp;quot;lib/dtutils.system&amp;quot; ðŸ”—DESCRIPTION This library contains routines for interfacing to the operating system from darktable lua scripts.
ðŸ”—RETURN VALUE dtsys - library - the darktable lua system library
ðŸ”—FUNCTIONS ðŸ”—external_command pass a command to the operating system for execution and return the result
ðŸ”—launch_default_app open file in default application
ðŸ”—windows_command pass a command to the windows operating system for execution and return the result</description>
    </item>
    
    <item>
      <title>details</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/details/</guid>
      <description>ðŸ”—NAME dtutils
ðŸ”—SYNOPSIS A Darktable lua utilities library
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; ðŸ”—DESCRIPTION dtutils provides a common library of functions used to build lua scripts.
ðŸ”—RETURN VALUE du- library - the library of functions
ðŸ”—FUNCTIONS ðŸ”—check_min_api_version check the minimum required api version against the current api version
ðŸ”—check_os check that the operating system is supported
ðŸ”—join join a table of strings with a specified separator
ðŸ”—prequire a protected lua require</description>
    </item>
    
    <item>
      <title>executable_manager</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/executable_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/executable_manager/</guid>
      <description>ðŸ”—Name executable_manager.lua - a tool for managing external executables used by darktable lua scripts
ðŸ”—Description executable_manager is a tool for managing the executable preferences stored in the darktablerc file. On startup the darktablerc file is scanned and a widget is built for each executable path. The user can select the executable from a drop down list and then modify the settings as desired.
Any changes made using executable_manager won&amp;rsquo;t be saved in the darktablerc file until darktable exits, but the preference is updated when the change is made so scripts will pick up the changes without restarting darktable.</description>
    </item>
    
    <item>
      <title>Lua API Version</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/version/</guid>
      <description>ðŸ”—Current API The Lua API version currently used in darktable 3.4.x is 6.1.0.
ðŸ”—Development API The Lua API is currently at version 6.2.2 in the development branch of darktable (currently 3.5). All changes for version 6.2.+ will be identified as such until version 6.2.+ is included in a darktable release.</description>
    </item>
    
    <item>
      <title>overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/overview/</guid>
      <description>The darktable library is the main entry point for all access to the darktable internals. To access the darktable specific functions you must load the darktable environment:
darktable = require &amp;quot;darktable&amp;quot;
All functions and data are accessed through the darktable module.</description>
    </item>
    
    <item>
      <title>overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/overview/</guid>
      <description>This section documents events that can be used to trigger Lua callbacks.</description>
    </item>
    
    <item>
      <title>overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/overview/</guid>
      <description>This section documents types that are specific to darktable&amp;rsquo;s Lua API.</description>
    </item>
    
    <item>
      <title>overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/overview/</guid>
      <description>darktable can be customized and extended using the Lua programming language. The lua-scripts repository contains the collected efforts of the darktable developers, maintainers, contributors and community.</description>
    </item>
    
    <item>
      <title>overview</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/overview/</guid>
      <description>darktable can be customized and extended using the Lua programming language. The lua-scripts repository contains the collected efforts of the darktable developers, maintainers, contributors and community. The following sections list the scripts contained in the repository, whether they can be run by themselves (Standalone - Yes) or depend on other scripts (Standalone - No), what operating systems they are known to work on (L - Linux, M - MacOS, W - Windows), and their purpose.</description>
    </item>
    
    <item>
      <title>autostyle</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/autostyle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/autostyle/</guid>
      <description>ðŸ”—Name autostyle.lua - automatically apply a given style when an exif tag is present in the image file
ðŸ”—Description Automatically apply a given style when an exif tag is present in the file. This tags are checked with exiftool, in order to be able to match very exotic tags. This was written to be able to apply a style to compensate for Auto-DR from Fujifilm cameras.
ðŸ”—Usage   Set the exif configuration string in your lua configuration.</description>
    </item>
    
    <item>
      <title>caller</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/caller/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/caller/</guid>
      <description>ðŸ”—NAME caller
ðŸ”—SYNOPSIS get the name and line number of the calling routine
ðŸ”—USAGE local log = require &amp;quot;lib/dtutils.log&amp;quot; result = log.caller(level) level - number - the number of stack levels to go down to retrieve the caller routine information
ðŸ”—DESCRIPTION caller gets the name and line number of the calling routine and returns it
ðŸ”—RETURN VALUE result - string - the name and line number of the calling function or &amp;lsquo;callback: &#39; if the attempt to get the caller returns nil</description>
    </item>
    
    <item>
      <title>check_if_bin_exists</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/check_if_bin_exists/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/check_if_bin_exists/</guid>
      <description>ðŸ”—NAME check_if_bin_exists
ðŸ”—SYNOPSIS check if an executable exists
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.check_if_bin_exists(bin) bin - string - the binary to check for
ðŸ”—DESCRIPTION check_if_bin_exists checks to see if the specified binary exists. check_if_bin_exists looks for an executable in the following order:
  If an executable preference is registered, then it&amp;rsquo;s checked to make sure it&amp;rsquo;s a file, exists, and is executable. If it passes all these tests it is returned to the caller.</description>
    </item>
    
    <item>
      <title>check_min_api_version</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/check_min_api_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/check_min_api_version/</guid>
      <description>ðŸ”—NAME check_min_api_version
ðŸ”—SYNOPSIS check the minimum required application programming interface (API) version against the current API version
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; local result = du.check_min_api_version(min_api, script_name) min_api - string - the API version that the application was written for (example: &amp;ldquo;5.0.0&amp;rdquo;)
script_name - string - the name of the script
ðŸ”—DESCRIPTION check_min_api_version compares the minimum API required for the application to run against the current API version. The minimum API version is typically the API version that was current when the application was created.</description>
    </item>
    
    <item>
      <title>copy_paste_metadata</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/copy_paste_metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/copy_paste_metadata/</guid>
      <description>ðŸ”—Name copy_paste_metadata.lua - copy and paste metadata between images
ðŸ”—Description This script adds keyboard shortcuts and buttons to copy/paste metadata between images.
ðŸ”—Usage  start this script from script manager it adds buttons to the selected images module it adds two keyboard shortcuts  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>darkroom_demo</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/darkroom_demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/darkroom_demo/</guid>
      <description>ðŸ”—Name darkroom_demo - an example script demonstrating how to control image display in darkroom mode
ðŸ”—Description darkroom_demo is an example script showing how to control the currently displayed image in darkroom mode using lua.
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required None
ðŸ”—Limitations ðŸ”—Author Bill Ferguson - wpferguson@gmail.com
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>darktable.collection</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.collection/</guid>
      <description>Allows to access the currently worked on images, i.e the ones selected by the collection lib. Filtering (rating etc) does not change that collection.
ðŸ”—darktable.collection.# types.dt_lua_image_t
Each image in the collection appears with a numerical index; you can iterate them using ipairs.</description>
    </item>
    
    <item>
      <title>darktable.gui.action_images</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/action_images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/action_images/</guid>
      <description>table
A table of types.dt_lua_image_t on which the user expects UI actions to happen. It is based on both the hovered image and the selection and is consistent with the way darktable works. It is recommended to use this table to implement Lua actions rather than darktable.gui.hovered or darktable.gui.selection to be consistent with darktable&amp;rsquo;s GUI.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.backgroundjobs</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/backgroundjobs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/backgroundjobs/</guid>
      <description>The window displaying the currently running jobs
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.views.darkroom</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/darkroom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/darkroom/</guid>
      <description>The darkroom view
Attributes:
 has_tostring parent : types.dt_lua_view_t  ðŸ”—darktable.gui.views.darkroom.display_image function( [image : types.dt_lua_image_t] ) : types.dt_lua_image_t Display an image in darkroom view.
 **[image] - types.dt_lua_image_t - The image to be displayed. If the image is not given, nothing will be changed. return - types.dt_lua_image_t - The image currently displayed.  </description>
    </item>
    
    <item>
      <title>dprint</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/dprint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/dprint/</guid>
      <description>ðŸ”—NAME dprint
ðŸ”—SYNOPSIS pass a variable to darktable.debug.dump and print the results to stdout
ðŸ”—USAGE local dd = require &amp;quot;lib/dtutils.debug&amp;quot; dd.dprint(var) var - variable - any variable that you want to see the contents of
ðŸ”—DESCRIPTION dprint is a wrapper around darktable.debug.dump, will directly print to stdout, same calling convention</description>
    </item>
    
    <item>
      <title>escape_xml_characters</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/escape_xml_characters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/escape_xml_characters/</guid>
      <description>ðŸ”—NAME escape_xml_characters
ðŸ”—SYNOPSIS escape characters for xml documents
ðŸ”—USAGE local ds = require &amp;quot;lib/dtutils.string&amp;quot; local result = ds.escape_xml_characters(str) str - string - the string that needs escaped
ðŸ”—DESCRIPTION escape_xml_characters provides the escape sequences for
&amp;quot;&amp;amp;&amp;quot;, &#39;&amp;quot;&#39;, &amp;quot;&#39;&amp;quot;, &amp;quot;&amp;lt;&amp;quot;, and &amp;quot;&amp;gt;&amp;quot; with the corresponding
&amp;quot;&amp;amp;amp;&amp;quot;,&amp;quot;&amp;amp;quot;&amp;quot;, &amp;quot;&amp;amp;apos;&amp;quot;, &amp;quot;&amp;amp;lt;&amp;quot;, and &amp;quot;&amp;amp;gt;&amp;quot; .
ðŸ”—RETURN VALUE result - string - the string containing escapes for the xml characters
ðŸ”—REFERENCE https://stackoverflow.com/questions/1091945/what-characters-do-i-need-to-escape-in-xml-documents</description>
    </item>
    
    <item>
      <title>exit</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/exit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/exit/</guid>
      <description>event
This event is triggered when darktable exits, it allows lua scripts to do cleanup jobs
ðŸ”—events.exit.callback function( ) ðŸ”—events.exit.extra registration parameters This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>external_command</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/external_command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/external_command/</guid>
      <description>ðŸ”—NAME external_command
ðŸ”—SYNOPSIS pass a command to the operating system for execution and return the result
ðŸ”—USAGE local dsys = require &amp;quot;lib/dtutils.system&amp;quot; local result = dsys.external_command(command) command - string - a string containing the command and arguments to be passed to the operating system for execution.
ðŸ”—DESCRIPTION external_command passes a command to the operating system for execution and returns the results.
ðŸ”—RETURN VALUE result - number = the return value signalling success or failure.</description>
    </item>
    
    <item>
      <title>gen_i18n_mo</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/gen_i18n_mo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/gen_i18n_mo/</guid>
      <description>ðŸ”—Name gen_i18n_mo - generate translation files from the source and place them in the appropriate locale directory
ðŸ”—Description gen_i18n_mo finds all the .po files scattered throughout the script tree, compiles them into .mo files and places them in the correct locale directory for use by the gettext tools.
ðŸ”—Usage  start this script from script manager. Stop the script after it runs or it will regenerate the translation files each time darktable starts.</description>
    </item>
    
    <item>
      <title>installation</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/installation/</guid>
      <description>ðŸ”—Download and Install The recommended method of installation is using git to clone the repository. This ensures that all dependencies on other scripts are met as well as providing an easy update path.
ðŸ”—snap packages The snap version of darktable comes with lua included starting with version 2.4.3snap2.
Ensure git is installed on your system. If it isn&amp;rsquo;t, use the package manager to install it. Then open a terminal and:</description>
    </item>
    
    <item>
      <title>lua_os_type</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_os_type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_os_type/</guid>
      <description>enum The type of OS we darktable can run on
Values :
 windows macos linux unix  </description>
    </item>
    
    <item>
      <title>check_if_file_exists</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/check_if_file_exists/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/check_if_file_exists/</guid>
      <description>ðŸ”—NAME check_if_file_exists
ðŸ”—SYNOPSIS check if a file or path exist
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.check_if_file_exists(filepath) filepath - string - a file or path to check
ðŸ”—DESCRIPTION check_if_file_exists checks to see if a file or path exists.
ðŸ”—RETURN VALUE result - boolean - true if the file or path exists, false if it doesn&amp;rsquo;t.</description>
    </item>
    
    <item>
      <title>check_os</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/check_os/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/check_os/</guid>
      <description>ðŸ”—NAME check_os
ðŸ”—SYNOPSIS check that the operating system is supported
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; local result = du.check_os(operating_systems) operating_systems - table - a table of operating system names such as {&amp;ldquo;windows&amp;rdquo;,&amp;ldquo;linux&amp;rdquo;,&amp;ldquo;macos&amp;rdquo;,&amp;ldquo;unix&amp;rdquo;}
ðŸ”—DESCRIPTION check_os checks a supplied table of operating systems against the operating system the script is running on and returns true if the OS is in the list, otherwise false
ðŸ”—RETURN VALUE result - boolean - true if the operating system is supported, false if not.</description>
    </item>
    
    <item>
      <title>clear_GPS</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/clear_gps/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/clear_gps/</guid>
      <description>ðŸ”—Name clear_GPS.lua - clear_GPS - clear GPS data from selected image(s)
ðŸ”—Description This shortcut removes the GPS coordinate data from the selected images.
ðŸ”—Usage  start the script from script manager select an image or images click the shortcut, or the button in selected images to clear GPS data  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Bill Ferguson - wpferguson@gmail.com
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>darktable.configuration</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.configuration/</guid>
      <description>table
This table includes values that describe details of the configuration of darktable.
ðŸ”—darktable.configuration.version string
The version number of darktable.
ðŸ”—darktable.configuration.has_gui boolean
True if darktable has a GUI (launched through the main darktable command, not darktable-cli).
ðŸ”—darktable.configuration.verbose boolean
True if the Lua logdomain is enabled.
ðŸ”—darktable.configuration.tmp_dir string
The name of the directory where darktable will store temporary files.
ðŸ”—darktable.configuration.config_dir string
The name of the directory where darktable will find its global configuration objects (modules).</description>
    </item>
    
    <item>
      <title>darktable.gui.create_job</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/create_job/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/create_job/</guid>
      <description>function( text : string, [percentage : boolean], [cancel_callback : function] ) : types.dt_lua_backgroundjob_t Create a new progress_bar displayed in darktable.gui.libs.backgroundjobs
  text - string - The text to display in the job entry
  [percentage] - boolean - Should a progress bar be displayed
  [cancel_callback] - function - A function called when the cancel button for that job is pressed. Note: the job won&amp;rsquo;t be destroyed automatically.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.camera</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/camera/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/camera/</guid>
      <description>The camera selection UI
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.views.lighttable</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/lighttable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/lighttable/</guid>
      <description>The lighttable view
Attributes:
 has_tostring parent : types.dt_lua_view_t  ðŸ”—darktable.gui.views.lighttable.is_image_visible function( image : types.dt_lua_image_t ) : types.dt_lua_image_t Check if the image is visible in lighttable view. The lighttable must be in file manager or zoomable mode.
 image - types.dt_lua_image_t - The image to be checked. return - boolean - True if the image is displayed. False if the image is partially displayed or not displayed.  ðŸ”—darktable.gui.views.lighttable.set_image_visible function( image : types.</description>
    </item>
    
    <item>
      <title>delete_long_tags</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/delete_long_tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/delete_long_tags/</guid>
      <description>ðŸ”—Name delete_long_tags.lua - delete all tags longer than a set length
ðŸ”—Description A simple script that will automatically delete all tags longer than a set length
ðŸ”—Usage  start this script from script manager set the the maximum length in darktable&amp;rsquo;s preference restart darktable  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>dt_lua_image_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_image_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_image_t/</guid>
      <description>dt_type
Image objects represent an image in the database. This is slightly different from a file on disk since a file can have multiple developments. Note that this is the real image object; changing the value of a field will immediately change it in darktable and will be reflected on any copy of that image object you may have kept.
Attributes:
 has_tostring  ðŸ”—dt_lua_image_t.attach_tag see darktable.tags.attach
ðŸ”—dt_lua_image_t.detach_tag see darktable.tags.detach</description>
    </item>
    
    <item>
      <title>engine</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/engine/</guid>
      <description>ðŸ”—NAME engine
ðŸ”—SYNOPSIS get and set the output engine
ðŸ”—USAGE local log = require &amp;quot;lib/dtutils.log&amp;quot; result = log.engine(level, ...) level - table - the log level to get or set the engine for, one of log.debug, log.info, log.warn, log.error log.success, log.always, log.screen, log.critical
&amp;hellip; - function - the output function, one of dt.print, dt.print_error, dt.print_log, print if not function is included, the current engine is returned for the specified log level</description>
    </item>
    
    <item>
      <title>get_lib_manpages</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_lib_manpages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_lib_manpages/</guid>
      <description>ðŸ”—Name get_lib_manpages.lua - retrieve the included library documentation and output it as man pages
ðŸ”—Description This script retrieves the included documentation in the script libaries and outputs them to the system temporary directory as man pages. Stop this script after it runs otherwise it will regenerate the pages each time it runs.
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>gettextExample</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/gettextexample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/gettextexample/</guid>
      <description>ðŸ”—Name gettextExample.lua - darktable script to show how translations works
ðŸ”—Description To create the .po file run: xgettext -l lua gettextExample.lua
xgettext is not a lua tool, it knows (almost) nothing about Lua, and not enough to do a proper parsing. It takes a text file (In our case a Lua file) and recognises a few (language dependant) keyword in there. It matches those keywords with internal description on how functions are called and creates the .</description>
    </item>
    
    <item>
      <title>global_toolbox-grouping_toggle</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/global_toolbox-grouping_toggle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/global_toolbox-grouping_toggle/</guid>
      <description>event
This event is triggered after the user toggled the grouping button.
ðŸ”—global_toolbox-grouping_toggle.callback function( toggle : boolean )  toggle - boolean - the new grouping status.  ðŸ”—global_toolbox-grouping_toggle.extra registration parameters This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>is_not_sanitized</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/is_not_sanitized/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/is_not_sanitized/</guid>
      <description>ðŸ”—NAME is_not_sanitized
ðŸ”—SYNOPSIS Check if a string has been sanitized
ðŸ”—USAGE local ds = require &amp;quot;lib/dtutils.string&amp;quot; local result = ds.is_not_sanitized(str) str - string - the string that needs to be made safe
ðŸ”—DESCRIPTION is_not_sanitized checks a string to see if it has been made safe use passing as an argument in a system command.
ðŸ”—RETURN VALUE result - boolean - true if the string is not sanitized otherwise false</description>
    </item>
    
    <item>
      <title>launch_default_app</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/launch_default_app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/launch_default_app/</guid>
      <description>ðŸ”—NAME launch_default_app
ðŸ”—SYNOPSIS open file in default application
ðŸ”—USAGE local dsys = require &amp;quot;lib/dtutils.file&amp;quot; result = dsys.launch_default_app(path) path - string - a file path
ðŸ”—DESCRIPTION launch_default_app allows opening a file in the application that is assigned as default for that filetype in the users&amp;rsquo;s system
ðŸ”—RETURN VALUE result - number - the return value signalling success or failure.</description>
    </item>
    
    <item>
      <title>new_tracepoint</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/new_tracepoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/new_tracepoint/</guid>
      <description>ðŸ”—NAME new_tracepoint
ðŸ”—SYNOPSIS create a function returning a tracepoint
ðŸ”—USAGE local dd = require &amp;quot;lib/dtutils.debug&amp;quot; local result = dd.new_tracepoint(name, ...) name - string - the name of the tracepoint to print out
&amp;hellip; - arguments - variables to dump the contents of
ðŸ”—DESCRIPTION new_tracepoint returns a tracepoint function with the given name. This is mainly used to debug callbacks.
ðŸ”—RETURN VALUE result - function - a function that returns the result of a tracepoint</description>
    </item>
    
    <item>
      <title>troubleshooting</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/troubleshooting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/troubleshooting/</guid>
      <description>Running darktable with Lua debugging enabled provides more information about what is occurring within the scripts.
ðŸ”—Snap Open a terminal and start darktable with the command snap run darktable -d lua. This provides debugging information to give you insight into what is happening.
ðŸ”—Linux Open a terminal and start darktable with the command darktable -d lua. This provides debugging information to give you insight into what is happening.
ðŸ”—MacOS Open a terminal and start darktable with the command /Applications/darktable.</description>
    </item>
    
    <item>
      <title>find_image_by_id</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/find_image_by_id/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/find_image_by_id/</guid>
      <description>ðŸ”—NAME find_image_by_id
ðŸ”—SYNOPSIS look up an image by ID in the database
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; local img = du.find_image_by_id(imgid) imgid - int - the image ID to retrieve
ðŸ”—DESCRIPTION find_image_by_id looks up an image by ID in the database.
ðŸ”—RETURN VALUE img - dt_lua_image_t - image with the given ID if found, nil if not</description>
    </item>
    
    <item>
      <title>chop_filetype</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/chop_filetype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/chop_filetype/</guid>
      <description>ðŸ”—NAME chop_filetype
ðŸ”—SYNOPSIS remove a filetype from a filename
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.chop_filetype(path) path - string - a filename with or without a path
ðŸ”—DESCRIPTION chop_filetype removes the filetype from the filename.
ðŸ”—RETURN VALUE result - string - the path and filename without the filetype</description>
    </item>
    
    <item>
      <title>CollectHelper</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/collecthelper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/collecthelper/</guid>
      <description>ðŸ”—Name CollectHelper.lua - add buttons to help with collections
ðŸ”—Description This plugin adds the button(s) to the &amp;ldquo;Selected Images&amp;rdquo; module:
 Return to Previous Collection Collect on image&amp;rsquo;s Folder Collect on image&amp;rsquo;s Color Label(s) Collect on All (AND)  It also adds 3 preferences to the lua options dialog box which allow the user to activate/deactivate the 3 &amp;ldquo;Collect on&amp;rdquo; buttons.
Button Behavior:
 Return to Previous Collection - Will reset the collect parameters to the previously active settings Collect on image&amp;rsquo;s Folder - Will change the collect parameters to be &amp;ldquo;Folder&amp;rdquo; with a value of the selected image&amp;rsquo;s folder location Collect on image&amp;rsquo;s Color Label(s) - Will change the collect parameter to be &amp;ldquo;Color&amp;rdquo; with a value of the selected images color labels, will apply multiple parameters with AND logic if multiple exist Collect on All (AND) - Will collect on all parameters activated by the preferences dialog, as such this button is redundant if you only have one of the two other options enabled  ðŸ”—Usage   start CollectHelper with script manager.</description>
    </item>
    
    <item>
      <title>darktable.control</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.control/</guid>
      <description>This table contain function to manipulate the control flow of lua programs. It provides ways to do background jobs and other related functions
ðŸ”—darktable.control.ending boolean
TRUE when darktable is terminating Use this variable to detect when you should finish long running jobs
ðŸ”—darktable.control.dispatch function( function : function, ... : anything ) Runs a function in the background. This function will be run at a later point, after luarc has finished running.</description>
    </item>
    
    <item>
      <title>darktable.gui.current_view</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/current_view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/current_view/</guid>
      <description>function( [view : types.dt_lua_view_t] ) : types.dt_lua_view_t Get or change the current view.
 [view] - _types.dt_lua_view_t_ - The view to switch to. If empty the current view is unchanged return - _types.dt_lua_view_t_ - the current view  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.collect</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/collect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/collect/</guid>
      <description>The collection UI element that allows to filter images by collection
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.collect.filter function( [rules : array of types.dt_lib_collect_params_rule_t] ) : array oftypes.dt_lib_collect_params_rule_t Get or change the list of visible images
Attributes:
  implicit_yield
  [rules] - array of types.dt_lib_collect_params_rule_t - A table of rules describing the filter. These rules will be applied after this call
  return - array of types.</description>
    </item>
    
    <item>
      <title>darktable.gui.views.map</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/map/</guid>
      <description>The map view
Attributes:
 has_tostring parent : types.dt_lua_view_t  ðŸ”—darktable.gui.views.map.latitude  number - The latitude of the center of the map  Attributes:
 write  ðŸ”—darktable.gui.views.map.longitude  number - The longitude of the center of the map  Attributes:
 write  ðŸ”—darktable.gui.views.map.zoom  number - The current zoom level of the map  Attributes:
 write  </description>
    </item>
    
    <item>
      <title>delete_unused_tags</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/delete_unused_tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/delete_unused_tags/</guid>
      <description>ðŸ”—Name delete_unused_tags.lua - automatically delete all tags that are not attached to any images
ðŸ”—Description A simple script that will automatically delete all tags that are not attached to any images
ðŸ”—Usage  start this script from script manager restart darktable  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_t/</guid>
      <description>dt_type
A virtual type representing all format types.
ðŸ”—dt_imageio_module_format_t.plugin_name string
A unique name for the plugin.
ðŸ”—dt_imageio_module_format_t.name string
A human readable name for the plugin.
ðŸ”—dt_imageio_module_format_t.extension string
The typical filename extension for that format.
ðŸ”—dt_imageio_module_format_t.mime string
The mime type associated with the format.
ðŸ”—dt_imageio_module_format_t.max_width number
The max width allowed for the format (0 = unlimited).
Attributes:
 write  2.3.6. dt_imageio_module_format_t.max_height
number
The max height allowed for the format (0 = unlimited).</description>
    </item>
    
    <item>
      <title>get_libdoc</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_libdoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_libdoc/</guid>
      <description>ðŸ”—Name get_libdoc.lua - retrieve the included library documentation and output it as text
ðŸ”—Description ðŸ”—Usage  start this script from script manager. Disable it after it finishes or it will generate the pages every time darktable runs.  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>global_toolbox-overlay_toggle</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/global_toolbox-overlay_toggle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/global_toolbox-overlay_toggle/</guid>
      <description>event
This event is triggered after the user toggled the overlay button.
ðŸ”—global_toolbox-overlay_toggle.callback function( toggle : boolean )  toggle - boolean - the new overlay status.  ðŸ”—global_toolbox-overlay_toggle.extra registration parameters This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>hello_world</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/hello_world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/hello_world/</guid>
      <description>ðŸ”—Name hello_world.lua - a simple lua script
ðŸ”—Description prints &amp;ldquo;hello world when DT starts
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>join</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/join/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/join/</guid>
      <description>ðŸ”—NAME join
ðŸ”—SYNOPSIS join a table of strings with a specified separator
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; local result = du.join(tabl, pat) tabl - table - a table of strings
pat - string - a separator
ðŸ”—DESCRIPTION join assembles a table of strings into a string with the specified pattern in between each string
ðŸ”—RETURN VALUE result - string - the joined string on success, or an empty string on failure</description>
    </item>
    
    <item>
      <title>log_level</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/log_level/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/log_level/</guid>
      <description>ðŸ”—NAME log_level
ðŸ”—SYNOPSIS get or set the log level
ðŸ”—USAGE local log = require &amp;quot;lib/log&amp;quot; local result = log.log_level(...) &amp;hellip; - arguments - if none is supplied, then the current log level is returned as one of: log.debug, log.info, log.warn, log.error, log.success. If one of log.debug, log.info, log.warn, log.error, or log.success is supplied as the argument then the log level is set to that value. All log levels greater than or equal in value will be enabled.</description>
    </item>
    
    <item>
      <title>sanitize</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/sanitize/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/sanitize/</guid>
      <description>ðŸ”—NAME sanitize
ðŸ”—SYNOPSIS surround a string in quotes making it safe to pass as an argument
ðŸ”—USAGE local ds = require &amp;quot;lib/dtutils.string&amp;quot; local result = ds.sanitize(str) str - string - the string that needs to be made safe
ðŸ”—DESCRIPTION sanitize converts a string into a version suitable for use passing as an argument in a system command.
ðŸ”—RETURN VALUE result - string - a websafe string</description>
    </item>
    
    <item>
      <title>terse_dump</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/terse_dump/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/terse_dump/</guid>
      <description>ðŸ”—NAME terse_dump
ðŸ”—SYNOPSIS set darktable.debug.known to shorten all image dumps to a single line
ðŸ”—USAGE local dd = require &amp;quot;lib/dtutils.debug&amp;quot; dd.terse_dump() ðŸ”—DESCRIPTION terse_dump sets darktable.debug.known to shorten all images to a single line. If you don&amp;rsquo;t need to debug the content of images, this will avoid them flooding your logs.</description>
    </item>
    
    <item>
      <title>windows_command</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/windows_command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.system/windows_command/</guid>
      <description>ðŸ”—NAME windows_command
ðŸ”—SYNOPSIS pass a command to the windows operating system for execution and return the result
ðŸ”—USAGE local dsys = require &amp;quot;lib/dtutils.system&amp;quot; local result = dsys.windows_command(command) command - string - a string containing the command and arguments to be passed to the operating system for execution.
ðŸ”—DESCRIPTION The normal method of executing an operating system command is using dt.control.execute(), but that doesn&amp;rsquo;t work with Windows when more than one item in the command is quoted.</description>
    </item>
    
    <item>
      <title>attributes</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/attributes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/attributes/</guid>
      <description>This section documents various attributes used throughout the documentation.
ðŸ”—write This object is a variable that can be written to.
ðŸ”—has_tostring This object has a specific reimplementation of the &amp;ldquo;tostring&amp;rdquo; method that allows pretty-printing it.
ðŸ”—implicit_yield This call will release the Lua lock while executing, thus allowing other Lua callbacks to run.
ðŸ”—parent This object inherits some methods from another object. You can call the methods from the parent on the child object</description>
    </item>
    
    <item>
      <title>copy_attach_detach_tags</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/copy_attach_detach_tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/copy_attach_detach_tags/</guid>
      <description>ðŸ”—Name copy_attach_detach_tags.lua - tools to manipulate image tags
ðŸ”—Description This script that will create four shortcuts and add a module in lighttable mode to copy, paste, replace and remove tags from images.
ðŸ”—Usage  set the shortcuts for copy, attach and detach in the preferences dialog &amp;lt;your shortcut1&amp;gt; copy will create a list of tags from all selected images &amp;lt;your shortcut2&amp;gt; paste copied tags to selected images, whereby darktable internal tags starting with &amp;lsquo;darktable|&amp;rsquo; will not be touched &amp;lt;your shortcut3&amp;gt; removes all except darktable internal tags from selected images &amp;lt;your shortcut4&amp;gt; replaces all tags except darktable internals A module reset will empty the clipboard  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Christian Kanzian</description>
    </item>
    
    <item>
      <title>create_unique_filename</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/create_unique_filename/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/create_unique_filename/</guid>
      <description>ðŸ”—NAME create_unique_filename
ðŸ”—SYNOPSIS create a unique filename from the supplied argument
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.create_unique_filename(filepath) filepath - string - the path and filename requested
ðŸ”—DESCRIPTION create_unique_filename takes a requested filepath and checks to see if it exists. If if doesn&amp;rsquo;t then it&amp;rsquo;s returned intact. If it already exists, then a two digit increment is added to the filename and it is tested again. The increment keeps increasing until either a unique filename is found or there have been 100 attempts.</description>
    </item>
    
    <item>
      <title>darktable.database</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.database/</guid>
      <description>Allows access to the database of images. Note that duplicate images (images with the same RAW but different XMP) will appear multiple times with different duplicate indexes. Also note that all images are here. This table is not influenced by any GUI filtering (collections, stars etc&amp;hellip;).
ðŸ”—darktable.database.# types.dt_lua_image_t
Each image in the database appears with a numerical index; you can iterate over them using ipairs.
ðŸ”—darktable.database.duplicate function( image : types.dt_lua_image_t ) : types.</description>
    </item>
    
    <item>
      <title>darktable.gui.hovered</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/hovered/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/hovered/</guid>
      <description>types.dt_lua_image_t
The image under the cursor or nil if no image is hovered.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.colorlabels</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/colorlabels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/colorlabels/</guid>
      <description>The color buttons that allow to set labels on an image
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.views.print</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/print/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/print/</guid>
      <description>The print view
Attributes:
 has_tostring parent : types.dt_lua_view_t  </description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_png</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_png/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_png/</guid>
      <description>dt_type
Type object describing parameters to export to png.
Attributes:
 parent : types.dt_imageio_module_format_t../types/dt_imageio_module_format_t  ðŸ”—dt_imageio_module_format_data_png.bpp number
The bpp parameter to use when exporting.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>enfuse</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/enfuse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/enfuse/</guid>
      <description>ðŸ”—Name enfuse.lua - merge the selected images into one tonemapped image and import the result
ðŸ”—Description This script uses enfuse to merge the selected images into one tonemapped image and imports the result. It only works on ldr images (like, JPEG).
ðŸ”—Usage  start this script from script manager it creates a new lighttable module  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>intermediate-export-image</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/intermediate-export-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/intermediate-export-image/</guid>
      <description>event
This event is called each time an image is exported, once for each image after the image has been processed to an image format but before the storage has moved the image to its final destination. The call is blocking.
ðŸ”—intermediate-export-image.callback function( event : string, image : types.dt_lua_image_t, filename : string, format : types.dt_imageio_module_format_t, storage : types.dt_imageio_module_storage_t )  event - string - The name of the event that triggered the callback.</description>
    </item>
    
    <item>
      <title>lighttable_demo</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/lighttable_demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/lighttable_demo/</guid>
      <description>ðŸ”—Name lighttable_demo.lua - an example script demonstrating how to control lighttable display modes
ðŸ”—Description lighttable_demo is an example script showing how to control lighttable layout, sorting, and filtering from a lua script. If the selected directory has different ratings, color labels, etc, then the sorting and filtering display is a little clearer.
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Bill Ferguson - wpferguson@gmail.com</description>
    </item>
    
    <item>
      <title>msg</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/msg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.log/msg/</guid>
      <description>ðŸ”—NAME msg
ðŸ”—SYNOPSIS print a log message
ðŸ”—USAGE local log = require &amp;quot;lib/log&amp;quot; log.msg(level, ...) level - table - the type of message, one of:
 log.debug - debugging messages log.info - informational messages log.warn - warning messages log.error - error messages log.success - success messages log.always - an internal message for debugging log.screen - output 1 line of text to the screen log.critical - print a critical message to the console  &amp;hellip; - string(s) - the message to print, which could be a comma separated set of strings</description>
    </item>
    
    <item>
      <title>prequire</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/prequire/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/prequire/</guid>
      <description>ðŸ”—NAME prequire
ðŸ”—SYNOPSIS a protected lua require
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; local status, lib = du.prequire(req_name) req_name - string - the filename of the lua code to load without the &amp;ldquo;.lua&amp;rdquo; filetype
ðŸ”—DESCRIPTION prequire is a protected require that can survive an error in the code being loaded without bringing down the calling routine.
ðŸ”—RETURN VALUE status - boolean - true on success lib - if status is true, then the code, otherwise an error message</description>
    </item>
    
    <item>
      <title>sanitize_lua</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/sanitize_lua/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/sanitize_lua/</guid>
      <description>ðŸ”—NAME sanitize_lua
ðŸ”—SYNOPSIS escape lua &amp;lsquo;magic&amp;rsquo; characters from a pattern string
ðŸ”—USAGE local ds = require &amp;quot;lib/dtutils.string&amp;quot; local result = ds.sanitize_lua(str) str - string - the string that needs to be made safe
ðŸ”—DESCRIPTION sanitize_lua escapes lua &amp;lsquo;magic&amp;rsquo; characters so that a string may be used in lua string/patten matching.
ðŸ”—RETURN VALUE result - string - a lua pattern safe string</description>
    </item>
    
    <item>
      <title>script_manager</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/script_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/script_manager/</guid>
      <description>ðŸ”—Name script_manager.lua - a tool for managing the darktable lua scripts
ðŸ”—Description script_manager is designed to be called from the users luarc file and used to manage the lua scripts.
On startup script_manager scans the lua scripts directory to see what scripts are present. Scripts are sorted by &amp;lsquo;category&amp;rsquo; based on what sub-directory they are in. With no additional script repositories iinstalled, the categories are contrib, examples, official and tools. When a category is selected the buttons show the script name and whether the script is started or stopped.</description>
    </item>
    
    <item>
      <title>tracepoint</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/tracepoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.debug/tracepoint/</guid>
      <description>ðŸ”—NAME tracepoint
ðŸ”—SYNOPSIS print out a tracepoint and dump the arguments
ðŸ”—USAGE local dd = require &amp;quot;lib/dtutils.debug&amp;quot; local result = dd.tracepoint(name, ...) name - string - the name of the tracepoint to print out
&amp;hellip; - arguments - variables to dump the contents of
ðŸ”—DESCRIPTION tracepoint prints its name and dumps its parameters using darktable.debug.
ðŸ”—RETURN VALUE result - &amp;hellip; - the supplied argument list</description>
    </item>
    
    <item>
      <title>cr2hdr</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/cr2hdr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/cr2hdr/</guid>
      <description>ðŸ”—Name cr2hdr.lua - Magic Lantern Dual ISO processing
ðŸ”—Description cr2hdr Magic Lantern Dual ISO processing.
This script automates the steps involved to process an image created with the Magic Lantern Dual ISO module. Upon invoking the script with a shortcut &amp;ldquo;cr2hdr&amp;rdquo; provided by Magic Lantern is run on the selected images. The processed files are imported. They are also made group leaders to hide the original files.
ðŸ”—Usage  start this script using script manager trigger conversion on selected/hovered images by shortcut (set shortcut in settings dialog) it is also possible to have the script run after importing a collection (optin, since it is not that fast)  ðŸ”—Additional Software Required  cr2hdr (sources can be obtained through the Magic Lantern repository)  ðŸ”—Limitations ðŸ”—Author Till Theato - theato@ttill.</description>
    </item>
    
    <item>
      <title>darktable.debug</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.debug/</guid>
      <description>table
This section must be activated separately by calling require darktable.debug
ðŸ”—darktable.debug.dump function( object : anything, [name : string], [known : table] ) : string This will return a string describing everything Lua knows about an object, used to know what an object is. This function is recursion-safe and can be used to dump _G if needed.
 object - anything - The object to dump. [name] - string - A name to use for the object.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.colorpicker</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/colorpicker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/colorpicker/</guid>
      <description>The colorpicker menu
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.views.slideshow</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/slideshow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/slideshow/</guid>
      <description>The slideshow view
Attributes:
 has_tostring parent : types.dt_lua_view_t  </description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_tiff</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_tiff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_tiff/</guid>
      <description>dt_type
Type object describing parameters to export to tiff.
Attributes:
 parent : types.dt_imageio_module_format_t  ðŸ”—dt_imageio_module_format_data_tiff.bpp number
The bpp parameter to use when exporting.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>executable_path_widget</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/executable_path_widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/executable_path_widget/</guid>
      <description>ðŸ”—NAME executable_path_widget
ðŸ”—SYNOPSIS create a widget to get executable path preferences
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local widget = df.executable_path_widget(executables) executables - table - a table of strings that are executable names
ðŸ”—DESCRIPTION executable_path_widget takes a table of executable names and builds a set of file selector widgets to get the path to the executable. The resulting widgets are wrapped in a box widget and returned.
ðŸ”—RETURN VALUE widget - widget - a widget containing a file selector widget for each executable.</description>
    </item>
    
    <item>
      <title>generate_image_txt</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/generate_image_txt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/generate_image_txt/</guid>
      <description>ðŸ”—Name generate_image_txt.lua - generate text metadata
ðŸ”—Description A script to run a command on images to generate text metadata
The medata will be displayed as an overlay on the image in lighttable mode
ðŸ”—Usage  start this script from script manager set a command to run on all image, this command should output text on stdout enable image file generation  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>moduleExample</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/moduleexample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/moduleexample/</guid>
      <description>ðŸ”—Name moduleExample.lua - create a new example lighttable module
ðŸ”—Description More informations about building user interface elements: https://www.darktable.org/usermanual/ch09.html.php#lua_gui_example And about new_widget here: https://www.darktable.org/lua-api/index.html.php#darktable_new_widget
ðŸ”—Usage   start this script from script manager
  it creates a new example lighttable module
  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>mouse-over-image-changed</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/mouse-over-image-changed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/mouse-over-image-changed/</guid>
      <description>event
This event is triggered whenever the image under the mouse changes
ðŸ”—mouse-over-image-changed.callback function( event : string, image : types.dt_lua_image_t )  event - string - The name of the event that triggered the callback. image - types.dt_lua_image_t - The new image under the mouse, can be nil if there is no image under the mouse  ðŸ”—mouse-over-image-changed.extra registration parameters This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>spairs</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/spairs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/spairs/</guid>
      <description>ðŸ”—NAME spairs
ðŸ”—SYNOPSIS an iterator that provides sorted pairs from a table
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; for key, value in du.spairs(t, order) do -- do something end t - table - table of key, value pairs order - function - an optional function to sort the pairs, if none is supplied, table.sort() is used
ðŸ”—DESCRIPTION spairs is an iterator that returns key, value pairs from a table in sorted order.</description>
    </item>
    
    <item>
      <title>strip_accents</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/strip_accents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/strip_accents/</guid>
      <description>ðŸ”—NAME strip_accents
ðŸ”—SYNOPSIS strip accents from characters
ðŸ”—USAGE local ds = require &amp;quot;lib/dtutils.string&amp;quot; local result = ds.strip_accents(str) str - string - the string with characters that need accents removed
ðŸ”—DESCRIPTION strip_accents removes accents from accented characters returning the unaccented character.
ðŸ”—RETURN VALUE result - string - the string containing unaccented characters
ðŸ”—REFERENCE Copied from https://forums.coronalabs.com/topic/43048-remove-special-characters-from-string/</description>
    </item>
    
    <item>
      <title>view_changed</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/view-changed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/view-changed/</guid>
      <description>event
This event is triggered after the user changed the active view
#view-changed.callback
function( event : string, old_view : types.dt_lua_view_t, new_view : types.dt_lua_view_t )  event - string - The name of the event that triggered the callback. old_view - types.dt_lua_view_t - The view that we just left new_view - types.dt_lua_view_t - The view we are now in  #view-changed.extra registration parameters
This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>darktable.films</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.films/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.films/</guid>
      <description>A table containing all the film objects in the database.
ðŸ”—darktable.films.# types.dt_lua_film_t
Each film has a numeric entry in the database. See types.dt_lua_film_t.
ðŸ”—darktable.films.new function( directory : string ) : types.dt_lua_film_t Creates a new empty film
see darktable.database.import to import a directory with all its images and to add images to a film
 directory - string - The directory that the new film will represent. The directory must exist return - types.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.copy_history</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/copy_history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/copy_history/</guid>
      <description>The UI element that manipulates history
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.panel_get_size</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_get_size/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_get_size/</guid>
      <description>function( panel : types.dt_ui_panel_t ):int Gets the size in pixels of the specified panel. This only works for the left, right, and bottom panels.
 panel - types.dt_ui_panel_t - The panel to get the size of.  </description>
    </item>
    
    <item>
      <title>darktable.gui.views.tethering</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/tethering/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/views/tethering/</guid>
      <description>The tethering view
Attributes:
 has_tostring parent : types.dt_lua_view_t  </description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_exr</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_exr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_exr/</guid>
      <description>dt_type
Type object describing parameters to export to exr.
Attributes:
 parent : types.dt_imageio_module_format_t  ðŸ”—dt_imageio_module_format_data_exr.compression string
The compression parameter to use when exporting.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>enfuseAdvanced</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/enfuseadvanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/enfuseadvanced/</guid>
      <description>ðŸ”—Name enfuseAdvanced.lua - process HDR or focus stacked images
ðŸ”—Description This plugin will add the new export module &amp;lsquo;fusion to DRI or DFF image&amp;rsquo;.
DRI = Dynamic Range Increase (Blend multiple bracket images into a single LDR file)
DFF = Depth From Focus (&amp;lsquo;Focus Stacking&amp;rsquo; - Blend multiple images with different focus into a single image)
ðŸ”—Usage Start this script using script manager.
Select multiple images that are either bracketed, or focus-shifted, set your desired operating parameters, and press the export button.</description>
    </item>
    
    <item>
      <title>file_copy</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/file_copy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/file_copy/</guid>
      <description>ðŸ”—NAME file_copy
ðŸ”—SYNOPSIS copy a file to another name/location
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.file_copy(fromFile, toFile) fromFile - string - name of file to copy from
toFile - string - name of file to copy to
ðŸ”—DESCRIPTION copy a file using a succession of methods from operating system to a pure lua solution
ðŸ”—RETURN VALUE result - boolean - nil on error, true on success</description>
    </item>
    
    <item>
      <title>image_path_in_ui</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/image_path_in_ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/image_path_in_ui/</guid>
      <description>ðŸ”—Name image_path_in_ui.lua - Add a widget with the path of the selected images
ðŸ”—Description Add a widget with the path of the selected images for easy copy/past Simple shortcuts to have multiple selection bufers
This plugin will add a widget at the bottom of the left column in lighttable mode
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author JÃ©rÃ©my Rosen
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>multi_os</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/multi_os/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/multi_os/</guid>
      <description>ðŸ”—Name multi_os.lua - an example script that runs on linux, MacOS, and Windows.
ðŸ”—Description multi_os is an example of how to write a script that will run on different operating systems. It uses the lua-scripts libraries to lessen the amount of code that needs to be written, as well as gaining access to tested cross-platform routines. This script also performs a function that some may find useful. It creates a button in the lighttable selected images module that extracts the embedded jpeg image from a raw file, then imports it and groups it with the raw file.</description>
    </item>
    
    <item>
      <title>post-import-film</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/post-import-film/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/post-import-film/</guid>
      <description>event
This event is triggered when an film import is finished (all post-import-image callbacks have already been triggered). This event can be registered multiple times.
ðŸ”—post-import-film.callback function( event : string, film : types.dt_lua_film_t )  event - string - The name of the event that triggered the callback. film - types.dt_lua_film_t - The new film that has been added. If multiple films were added recursively only the top level film is reported.</description>
    </item>
    
    <item>
      <title>split</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/split/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils/split/</guid>
      <description>ðŸ”—NAME split
ðŸ”—SYNOPSIS split a string on a specified separator
ðŸ”—USAGE local du = require &amp;quot;lib/dtutils&amp;quot; local result = du.split(str, pat) str - string - the string to split
pat - string - the pattern to split on
ðŸ”—DESCRIPTION split separates a string into a table of strings. The strings are separated at each occurrence of the supplied pattern. The pattern may be any pattern as described in the lua docs.</description>
    </item>
    
    <item>
      <title>urlencode</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/urlencode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.string/urlencode/</guid>
      <description>ðŸ”—NAME urlencode
ðŸ”—SYNOPSIS encode a string in a websage manner
ðŸ”—USAGE local ds = require &amp;quot;lib/dtutils.string&amp;quot; local result = ds.urlencode(str) str - string - the string that needs to be made websafe
ðŸ”—DESCRIPTION urlencode converts a string into a websafe version suitable for use in a web browser.
ðŸ”—RETURN VALUE result - string - a websafe string
ðŸ”—REFERENCE https://forums.coronalabs.com/topic/43048-remove-special-characters-from-string</description>
    </item>
    
    <item>
      <title>darktable.gettext</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.gettext/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.gettext/</guid>
      <description>table
This table contains functions related to translating lua scripts
ðŸ”—darktable.gettext.gettext function( msgid : string ) : string Translate a string using the darktable textdomain
 msgid - string - The string to translate return - string - The translated string  ðŸ”—darktable.gettext.dgettext function( domainname : string, msgid : string ) : string Translate a string using the specified textdomain
 domainname - string - The domain to use for that translation msgid - string - The string to translate return - string - The translated string  ðŸ”—darktable.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.darktable_label</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/darktable_label/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/darktable_label/</guid>
      <description>The darktable logo in the upper left corner
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.panel_hide</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_hide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_hide/</guid>
      <description>function( panel : types.dt_ui_panel_t ) Hides the specified panel.
 panel - types.dt_ui_panel_t - The panel to hide.  </description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_copy</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_copy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_copy/</guid>
      <description>dt_type
Type object describing parameters to export to copy.
Attributes:
 parent : types.dt_imageio_module_format_t  </description>
    </item>
    
    <item>
      <title>exportLUT</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/exportlut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/exportlut/</guid>
      <description>ðŸ”—Name ðŸ”—Description Given a haldCLUT identity file this script generates haldCLUTS from all the user&amp;rsquo;s styles and exports them to a location of their choosing.
ðŸ”—Usage Start this script from script manager.
ðŸ”—Additional Software Required ðŸ”—Limitations Warning: during export if a naming collision occurs the older file is automatically overwritten silently.
ðŸ”—Author Noah Clarke
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>file_move</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/file_move/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/file_move/</guid>
      <description>ðŸ”—NAME file_move
ðŸ”—SYNOPSIS move a file from one directory to another
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.file_move(fromFile, toFile) fromFile - string - name of the original file
toFile - string - the new file location and name
ðŸ”—DESCRIPTION Move a file from one place to another. Try a succession of methods from builtin to operating system to a pure lua solution.
ðŸ”—RETURN VALUE result - boolean - nil on error, some value on success</description>
    </item>
    
    <item>
      <title>import_filter_manager</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/import_filter_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/import_filter_manager/</guid>
      <description>ðŸ”—Name import_filter_manager.lua - add a dropdown list with import filters to the import dialog
ðŸ”—Description This script adds a dropdown list with import filters to the import dialog. Scripts can add new filters by registering them with darktable.register_import_filter(name, callback) The callback has type function(event, images), i.e., it is the same as when directly registering the pre-import event.
ðŸ”—Usage  start this script from script manager also require some files with import filters, for example import_filters.</description>
    </item>
    
    <item>
      <title>panels_demo</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/panels_demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/panels_demo/</guid>
      <description>ðŸ”—Name panels_demo.lua - an example script demonstrating how to contol panel visibility
ðŸ”—Description panels_demo is an example script showing how to control panel visibility. It cycles through the panels hiding them one by one, then showing them one by one, then hiding all, then showing all. Finally, the original panel visibility is restored.
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>post-import-image</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/post-import-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/post-import-image/</guid>
      <description>event
This event is triggered whenever a new image is imported into the database. This event can be registered multiple times, all callbacks will be called. The call is blocking.
ðŸ”—post-import-image.callback function( event : string, image : types.dt_lua_image_t )  event - string - The name of the event that triggered the callback. image - types.dt_lua_image_t - The image object that has been imported.  ðŸ”—post-import-image.extra registration parameters This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.export</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/export/</guid>
      <description>The export menu
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.panel_hide_all</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_hide_all/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_hide_all/</guid>
      <description>function( ) Hide all panels.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_pfm</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_pfm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_pfm/</guid>
      <description>dt_type
Type object describing parameters to export to pfm.
Attributes:
 parent : types.dt_imageio_module_format_t  </description>
    </item>
    
    <item>
      <title>ext_editor</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/ext_editor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/ext_editor/</guid>
      <description>ðŸ”—Name ext_editor.lua - edit images with external editors
ðŸ”—Description This script provides helpers to edit image files with programs external to darktable. It adds:
 a new target storage &amp;ldquo;collection&amp;rdquo;. Image exported will be reimported to collection for further editing with external programs a new lighttable module &amp;ldquo;external editors&amp;rdquo;, to select a program from a list of up to 9 external editors and run it on a selected image (adjust this limit by changing MAX_EDITORS) an option to display the module in darkroom view a set of lua preferences in order to configure name and path of up to 9 external editors a set of lua shortcuts in order to quick launch the external editors  ðŸ”—Usage  start this script with script manager  ðŸ”—setup  in &amp;ldquo;preferences/lua options&amp;rdquo; configure name and path/command of external programs note that if a program name is left empty, that and all following entries will be ignored in &amp;ldquo;preferences/shortcuts/lua&amp;rdquo; configure shortcuts for external programs (optional) whenever programs preferences are changed, in lighttable/external editors, press &amp;ldquo;update list&amp;rdquo;  ðŸ”—use   in the export dialog choose &amp;ldquo;collection&amp;rdquo; and select the format and bit depth for the exported image</description>
    </item>
    
    <item>
      <title>filename_increment</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/filename_increment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/filename_increment/</guid>
      <description>ðŸ”—NAME filename_increment
ðŸ”—SYNOPSIS add a two digit increment to a filename
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.filename_increment(filepath) filepath - string - filename to increment
ðŸ”—DESCRIPTION filename_increment solves the problem of filename conflict by adding an increment to the filename. If the supplied filename has no increment then &amp;ldquo;01&amp;rdquo; is added to the basename. If the filename already has an increment, then 1 is added to it and the filename returned.</description>
    </item>
    
    <item>
      <title>import_filters</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/import_filters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/import_filters/</guid>
      <description>ðŸ”—Name import_filters.lua - add filters for import_filter_manager
ðŸ”—Description This script goes along with the import filter manager. It adds two filters:
 ignore jpegs: this one does the same as the existing option in the import dialog and just skips all JPEGs during import. prefer raw over jpeg: this one is a bit more elaborate, it ignores JPEGs when there is also another file with the same basename, otherwise it allows JPEGs, too.</description>
    </item>
    
    <item>
      <title>pre-import</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/pre-import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/pre-import/</guid>
      <description>event
This event is trigger before any import action
ðŸ”—pre-import.callback function( event : string, images : table of string )  event - string - The name of the event that triggered the callback. images - table of string - The files that will be imported. Modifying this table will change the list of files that will be imported.  ðŸ”—pre-import.extra registration parameters This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>preferenceExample</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/preferenceexamples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/preferenceexamples/</guid>
      <description>ðŸ”—Name preferenceExample.lua - show the different preference types that are possible with Lua
ðŸ”—Description darktable script to show the different preference types that are possible with Lua
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.filmstrip</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/filmstrip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/filmstrip/</guid>
      <description>The filmstrip at the bottom of some views
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.panel_set_size</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_set_size/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_set_size/</guid>
      <description>function( panel : types.dt_ui_panel_t size : int ) Sets the size in pixels of the specified panel. This only works for the left, right, and bottom panels.
 panel - types.dt_ui_panel_t - The panel to set the size of. size - int - The size to set the panel to.  </description>
    </item>
    
    <item>
      <title>darktable.guides</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.guides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.guides/</guid>
      <description>table
Guide lines to overlay over an image in crop and rotate. All guides are clipped to the drawing area.
ðŸ”—darktable.guides.register_guide function( name : string, draw_callback : function, [gui_callback : function] ) Register a new guide.
 name - string - The name of the guide to show in the GUI. draw_callback - function - The function to call to draw the guide lines. [gui_callback] - function - A function returning a widget to show when the guide is selected.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_jpeg</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_jpeg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_jpeg/</guid>
      <description>dt_type
Type object describing parameters to export to jpeg.
Attributes:
 parent : types.dt_imageio_module_format_t  ðŸ”—dt_imageio_module_format_data_jpeg.quality number
The quality to use at export time.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>face_recognition</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/face_recognition/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/face_recognition/</guid>
      <description>ðŸ”—Name face_recognition.lua - add a new storage option and calls face_recognition after export
ðŸ”—Description Add a new storage option to send images to face_recognition. Images are exported to darktable tmp dir first. A directory with known faces must exist, the image name are the tag names which will be used. Multiple images for one face can exist, add a number to it, the number will be removed from the tag, for example: People|IknowYou1.</description>
    </item>
    
    <item>
      <title>get_basename</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_basename/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_basename/</guid>
      <description>ðŸ”—NAME get_basename
ðŸ”—SYNOPSIS get the filename without the path or extension
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.get_basename(filepath) filepath - string - path and filename
ðŸ”—DESCRIPTION get_basename returns the name of the file without the path or filetype.
ðŸ”—RETURN VALUE result - string - the basename of the file</description>
    </item>
    
    <item>
      <title>printExamples</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/printexamples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/printexamples/</guid>
      <description>ðŸ”—Name printExamples.lua - prints &amp;ldquo;hello world&amp;rdquo; when darktable starts
ðŸ”—Description prints &amp;ldquo;hello world&amp;rdquo; to the screen when darktable starts
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>save_selection</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/save_selection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/save_selection/</guid>
      <description>ðŸ”—Name save_selection.lua - simple shortcuts to have multiple selection buffers
ðŸ”—Description Simple shortcuts to have multiple selection buffers
ðŸ”—Usage  start this script from script manager go to configuration =&amp;gt; preferences =&amp;gt; lua set the shortcuts you want to use  This plugin will provide shortcuts to save to and restore from up to five temporary buffers
This plugin also provides a shortcut to swap the current selection with a quick-swap buffer</description>
    </item>
    
    <item>
      <title>selection-changed</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/selection-changed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/selection-changed/</guid>
      <description>API 6.2.1
event
This event is triggered whenever the selection of images changes
ðŸ”—selection-changed.callback function( event : string )  event - string - The name of the event that triggered the callback.  ðŸ”—selection-changed.extra registration parameters This event has no extra registration parameters.</description>
    </item>
    
    <item>
      <title>fujifilm_dynamic_range</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/fujifilm_dynamic_range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/fujifilm_dynamic_range/</guid>
      <description>ðŸ”—Name fujifilm_dynamic_range.lua - adjust darktable exposure by Fujifilm raw exposure bias
ðŸ”—Description Support for adjusting darktable exposure by Fujifilm raw exposure bias. This corrects for a DR100/DR200/DR400 &amp;ldquo;dynamic range&amp;rdquo; setting.
Based upon fujifilm_ratings by Ben Mendis
The relevant tag is RawExposureBias (0x9650). This appears to represent the shift in EV for the chosen DR setting (whether manual or automatic). Note that even at 100DR (&amp;ldquo;standard&amp;rdquo;) there is an EV shift:</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.filter</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/filter/</guid>
      <description>The image-filter menus at the top of the UI
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.filter.sort function( [sort : types.dt_collection_sort_t] ) : types.dt_collection_sort_t Change the collection sort field.
 [sort] - types.dt_collection_sort_t - The new field to sort by. If empty the current sort field is unchanged return - types.dt_collection_sort_t = The current sort field.  ðŸ”—darktable.gui.libs.filter.sort_order function( [order : types.dt_collection_sort_order_t] ) : types.dt_collection_sort_order_t Change the collection sort order.</description>
    </item>
    
    <item>
      <title>darktable.gui.panel_show</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_show/</guid>
      <description>function( panel : types.dt_ui_panel_t ) Shows the specified panel.
 panel - types.dt_ui_panel_t - The panel to show.  </description>
    </item>
    
    <item>
      <title>darktable.new_format</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.new_format/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.new_format/</guid>
      <description>function( type : string ) : types.dt_imageio_module_format_t Creates a new format object to export images
  type - string - The type of format object to create, one of :
 copy exr j2k jpeg pdf pfm png ppm tiff webp    return - types.dt_imageio_module_format_t - The newly created object. Exact type depends on the type passed
  </description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_ppm</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_ppm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_ppm/</guid>
      <description>dt_type
Type object describing parameters to export to ppm.
Attributes:
 parent : types.dt_imageio_module_format_t  </description>
    </item>
    
    <item>
      <title>fujifilm_ratings</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/fujifilm_ratings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/fujifilm_ratings/</guid>
      <description>ðŸ”—Name fujifilm_ratings.lua - support for importing Fujifilm in-camera ratings in darktable
ðŸ”—Description Support for importing Fujifilm in-camera ratings in darktable.
ðŸ”—Usage Start this script from script manager
ðŸ”—Additional Software Required exiftool (https://www.sno.phy.queensu.ca/~phil/exiftool/)
ðŸ”—Limitations ðŸ”—Author Ben Mendis - ben.mendis@gmail.com
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>get_executable_path_preference</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_executable_path_preference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_executable_path_preference/</guid>
      <description>ðŸ”—NAME get_executable_path_preference
ðŸ”—SYNOPSIS return the path to an executable from a preference
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.get_executable_path_preference(executable) executable - string - the name of the executable to get the path for
ðŸ”—DESCRIPTION get_executable_path_preference returns the path preference to the requested executable.
ðŸ”—RETURN VALUE result - string - path to the executable
ðŸ”—LIMITATIONS executable should be the basename of the executable without extensions</description>
    </item>
    
    <item>
      <title>running_os</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/running_os/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/examples/running_os/</guid>
      <description>ðŸ”—Name running_os.lua - prints the operating system
ðŸ”—Description prints the operating system
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>selection_to_pdf</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/selection_to_pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/official/selection_to_pdf/</guid>
      <description>ðŸ”—Name selection_to_pdf.lua - generate a PDF file (via Latex) containing all selected images
ðŸ”—Description Generates a PDF file (via Latex) containing all selected images
This plugin will add a new exporter that will allow you to generate the pdf file
Plugin allows you to choose how many thumbnails you need per row
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required  a PDF-Viewer pdflatex (Latex)  ðŸ”—Limitations ðŸ”—Author JÃ©rÃ©my Rosen &amp;amp; Pascal Obry</description>
    </item>
    
    <item>
      <title>shortcut</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/events/shortcut/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/events/shortcut/</guid>
      <description>event
This event registers a new keyboard shortcut. The shortcut isn&amp;rsquo;t bound to any key until the users does so in the preference panel. The event is triggered whenever the shortcut is triggered. This event can only be registered once per value of shortcut.
ðŸ”—shortcut.callback function( event : string, shortcut : string )  event - string - The name of the event that triggered the callback. shortcut - string - The tooltip string that was given at registration time.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.geotagging</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/geotagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/geotagging/</guid>
      <description>The geotagging time synchronisation UI
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.panel_show_all</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_show_all/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_show_all/</guid>
      <description>function( ) Show all panels.</description>
    </item>
    
    <item>
      <title>darktable.new_storage</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.new_storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.new_storage/</guid>
      <description>function( type : string ) : types.dt_imageio_module_storage_t Creates a new storage object to export images.
  type - string - The type of storage object to create, one of:
 disk email gallery latex piwigo (Other, lua-defined, storage types may appear.)    return - [types.dt_imageio_module_storage_t(../../types/dt_imageio_module_storage_t)] - The newly created object. Exact type depends on the type passed
  </description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_webp</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_webp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_webp/</guid>
      <description>dt_type
Type object describing parameters to export to webp.
Attributes:
 parent : types.dt_imageio_module_format_t  ðŸ”—dt_imageio_module_format_data_webp.quality number
The quality to use at export time.
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_webp.comp_type types.comp_type_t
The overall quality to use; can be one of &amp;ldquo;webp_lossy&amp;rdquo; or &amp;ldquo;webp_lossless&amp;rdquo;.
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_webp.hint types.hint_t
A hint on the overall content of the image.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>geoJSON_export</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/geojson_export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/geojson_export/</guid>
      <description>ðŸ”—Name geoJSON_export.lua - export a geoJSON file from selected images
ðŸ”—Description darktable geoJSON export script
ðŸ”—Usage  start this script using script manager  ðŸ”—Additional Software Required  mkdir convert (ImageMagick) xdg-open xdg-user-dir  ðŸ”—Limitations This script is only tested with Linux
ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>get_filename</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_filename/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_filename/</guid>
      <description>ðŸ”—NAME get_filename
ðŸ”—SYNOPSIS get the filename and extension from a file path
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.get_filename(filepath) filepath - string - path and filename
ðŸ”—DESCRIPTION get_filename strips the path from a filepath and returns the filename
ðŸ”—RETURN VALUE result - string - the file name and type</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.global_toolbox</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/global_toolbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/global_toolbox/</guid>
      <description>The common tools to all view (settings, grouping&amp;hellip;)
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.global_toolbox.grouping boolean- The current status of the image grouping option
Attributes:
 write  ðŸ”—darktable.gui.libs.global_toolbox.show_overlays boolean - the current status of the image overlays option
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>darktable.gui.panel_visible</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_visible/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/panel_visible/</guid>
      <description>function( panel : types.dt_ui_panel_t ) : boolean Determines if the specified panel is visible.
 panel - types.dt_ui_panel_t - The panel to check. return - boolean - true if the panel is visible, false if not  </description>
    </item>
    
    <item>
      <title>darktable.new_widget</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.new_widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.new_widget/</guid>
      <description>function( type : string, ... : variable ) : types.lua_widget Creates a new widget object to display in the UI.
  type - string - The type of storage object to create, one of:
 box button check_button combobox container entry file_chooser_button label section_label separator slider stack text_view    &amp;hellip; - variable - Extra parameters, exact value are documented with each type
  return - types.lua_widget - The newly created object.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_j2k</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_j2k/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_j2k/</guid>
      <description>dt_type
Type object describing parameters to export to jpeg2000.
Attributes:
 parent : types.dt_imageio_module_format_t  ðŸ”—dt_imageio_module_format_data_j2k.quality number
The quality to use at export time.
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_j2k.bpp number
The bpp parameter to use when exporting.
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_j2k.format types.dt_imageio_j2k_format_t
The format to use.
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_j2k.preset types.dt_imageio_j2k_preset_t
The preset to use.
Attributes: 62
 write  </description>
    </item>
    
    <item>
      <title>geoToolbox</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/geotoolbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/geotoolbox/</guid>
      <description>ðŸ”—Name geoToolbox.lua - a module of geo tools
ðŸ”—Description  it creates a new geoToolbox lighttable module  ðŸ”—Usage  require this script from your main lua file To do this add this line to the file .config/darktable/luarc: require &amp;ldquo;geoToolbox&amp;rdquo;  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>get_filetype</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_filetype/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_filetype/</guid>
      <description>ðŸ”—NAME get_filetype
ðŸ”—SYNOPSIS get the filetype from a filename
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.get_filetype(filepath) filepath - string - path and filename
ðŸ”—DESCRIPTION get_filetype returns the filetype from the supplied filepath
ðŸ”—RETURN VALUE result - string - the filetype</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.hinter</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/hinter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/hinter/</guid>
      <description>The small line of text at the top of the UI showing the number of selected images
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.selection</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/selection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/selection/</guid>
      <description>function( [selection : table of types.dt_lua_image_t] ) : table of types.dt_lua_image_t Get or change the set of selected images.
Attributes: implicit_yield
 [selection] - table of types.dt_lua_image_t - A table of images which will define the selected images. If this parameter is not given the selection will be untouched. If an empty table is given the selection will be emptied. return - table of types.dt_lua_image_t - A table containing the selection as it was before the function was called.</description>
    </item>
    
    <item>
      <title>darktable.password</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.password/</guid>
      <description>ðŸ”—Lua API 6.2.0 Store and retrieve credentials using the darktable password storage backend.
ðŸ”—darktable.password.save function( application : string, username : string, password : string ) :boolean Save a username/password pair for use accessing an application.
 application - string - Name of application or website. username - string - The username used to access the application or website. password - string - The credential used to authenticate the username. return - boolean - True if the credentials are saved, false if they are not.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_format_data_pdf</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_pdf/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_format_data_pdf/</guid>
      <description>dt_type
Type object describing parameters to export to pdf.
Attributes:
 parent : types.dt_imageio_module_format_t  ðŸ”—dt_imageio_module_format_data_pdf.dpi number
The dot per inch value to use at export
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_pdf.icc boolean
Should the images be tagged with their embedded profile
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_pdf.border string
Empty space around the PDF images
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_pdf.orientation string
Orientation of the pages in the document
Attributes:
 write  ðŸ”—dt_imageio_module_format_data_pdf.</description>
    </item>
    
    <item>
      <title>get_path</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_path/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/get_path/</guid>
      <description>ðŸ”—NAME get_path
ðŸ”—SYNOPSIS get the path from a file path
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.get_path(filepath) filepath - string - path and filename
ðŸ”—DESCRIPTION get_path strips the filename and filetype from a path and returns the path
ðŸ”—RETURN VALUE result - string - the path</description>
    </item>
    
    <item>
      <title>gimp</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/gimp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/gimp/</guid>
      <description>ðŸ”—Name gimp.lua - export and edit with GIMP
ðŸ”—Description This script provides another storage (export target) for darktable. Selected images are exported in the specified format to temporary storage. GIMP is launched and opens the files. After editing, the exported images are overwritten to save the changes. When GIMP exits, the exported files are moved into the current collection and imported into the database. The imported files then show up grouped with the originally selected images.</description>
    </item>
    
    <item>
      <title>_pdf_mode_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/_pdf_mode_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/_pdf_mode_t/</guid>
      <description>enum
The export mode to use for PDF document
Values:
 normal draft debug  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.histogram</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/histogram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/histogram/</guid>
      <description>The histogram widget
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.preferences</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.preferences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.preferences/</guid>
      <description>table
Lua allows you to manipulate preferences. Lua has its own namespace for preferences and you can&amp;rsquo;t write normal darktable preferences. Preference handling functions take a script parameter. This is a string used to avoid name collision in preferences (i.e namespace). Set it to something unique, usually the name of the script handling the preference. Preference handling functions can&amp;rsquo;t guess the type of a parameter. You must pass the type of the preference you are handling.</description>
    </item>
    
    <item>
      <title>gpx_export</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/gpx_export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/gpx_export/</guid>
      <description>ðŸ”—Name gpx_export.lua - gpx exporter
ðŸ”—Description Simple darktable GPX generator script
This script generates a GPX track from all images having GPS latitude and longitude information. For each source folder, a separate &amp;lt;trk&amp;gt; is generated in the gpx file.
ðŸ”—Usage ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Jannis_V</description>
    </item>
    
    <item>
      <title>mkdir</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/mkdir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/mkdir/</guid>
      <description>ðŸ”—NAME mkdir
ðŸ”—SYNOPSIS create the directory(ies) if they do not already exist
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; df.mkdir(path) path - string - a directory path
ðŸ”—DESCRIPTION mkdir creates directories if they do not already exist. It creates parent directories if needed.
ðŸ”—RETURN VALUE path - string - a directory path</description>
    </item>
    
    <item>
      <title>_pdf_pages_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/_pdf_pages_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/_pdf_pages_t/</guid>
      <description>enum
The different page types for PDF export
Values :
 all single contact  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.history</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/history/</guid>
      <description>The history manipulation menu
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.print</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.print/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.print/</guid>
      <description>function( message : string ) Will print a string to the darktable control log (the long overlaid window that appears over the main panel).
 message - string - The string to display which should be a single line.  </description>
    </item>
    
    <item>
      <title>HDRMerge</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/hdrmerge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/hdrmerge/</guid>
      <description>ðŸ”—Name HDRMerge.lua - create an HDR image using HDRMerge
ðŸ”—Description This plugin adds the module &amp;lsquo;HDRMerge&amp;rsquo; to darktable&amp;rsquo;s lighttable view
ðŸ”—Usage Start this script using script manager.
On the initial startup go to darktable settings &amp;gt; lua options and set your executable paths and other preferences, then restart darktable
Select bracketed images and press the Run HDRMerge button. The resulting DNG will be auto-imported into darktable. Additional tags or style can be applied on auto import as well, if you desire.</description>
    </item>
    
    <item>
      <title>rmdir</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/rmdir/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/rmdir/</guid>
      <description>ðŸ”—NAME rmdir
ðŸ”—SYNOPSIS recursively remove a directory
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; df.rmdir(path) path - string - a directory path
ðŸ”—DESCRIPTION rmdir allows directories to be removed recursively.
ðŸ”—RETURN VALUE path - string - a directory path</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.image</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/image/</guid>
      <description>The UI element that manipulates the current images
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.image.register_action function( label : string, callback : function, [tooltip : string] ) Add a new button and call a callback when it is clicked
 label - string - The label to display on the button callback - function - The function to call when the button is pressed [tooltip] - string - The tooltip to use on the new button  callback -</description>
    </item>
    
    <item>
      <title>darktable.print_error</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.print_error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.print_error/</guid>
      <description>function( message : string ) This function is similar todarktable.print_log but adds an ERROR prefix for clarity.
 message - string - The string to display.  </description>
    </item>
    
    <item>
      <title>dt_pdf_stream_encoder_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_pdf_stream_encoder_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_pdf_stream_encoder_t/</guid>
      <description>enum
The compression mode for PDF document
Values:
 uncompressed deflate  </description>
    </item>
    
    <item>
      <title>hugin</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/hugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/hugin/</guid>
      <description>ðŸ”—Name hugin.lua - stitch multiple images into a panorama
ðŸ”—Description Add a new storage option to send images to hugin. Images are exported to darktable tmp dir first.
ðŸ”—Usage  start this script from script manager set the hugin tool paths (on some platforms) if hugin gui mode is used, save the final result in the tmp directory with the first file name and _pano as suffix for the image to be automatically imported to DT afterwards  ðŸ”—Additional Software Required  hugin  ðŸ”—Limitations ðŸ”—Author Wolfgang Goetz</description>
    </item>
    
    <item>
      <title>sanitize_filename</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/sanitize_filename/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/sanitize_filename/</guid>
      <description>ðŸ”—NAME sanitize_filename
ðŸ”—SYNOPSIS make a filename safe to pass as an argument
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local sanitized_filename = df.sanitize_filename(filename) filename - string - a filepath and filename
ðŸ”—DESCRIPTION sanitize_filename places quotes around the filename in an operating system specific manner. The result is safe to pass as an argument to the operating system.
ðŸ”—RETURN VALUE sanitized_filename - string - quoted filename</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.import</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/import/</guid>
      <description>The buttons to start importing images
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.import.register_widget function( widget : types.lua_widget ) Add a widget in the option expander of the import dialog
 widget - types.lua_widget - The widget to add to the dialog. The reset callback of the widget will be called whenever the dialog is opened.  </description>
    </item>
    
    <item>
      <title>darktable.print_log</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.print_log/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.print_log/</guid>
      <description>function( message : string ) This function will print its parameter if the Lua logdomain is activated. Start darktable with the &amp;quot;-d lua&amp;quot; command line option to enable the Lua logdomain.
 message - string - The string to display.  </description>
    </item>
    
    <item>
      <title>dt_imageio_module_storage_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_t/</guid>
      <description>dt_type
A virtual type representing all storage types.
ðŸ”—dt_imageio_module_storage_t.plugin_name string
A unique name for the plugin.
Attributes:
 write  ðŸ”—dt_imageio_module_storage_t.name string
A human readable name for the plugin.
Attributes:
 write  ðŸ”—dt_imageio_module_storage_t.width number
The currently selected width for the plugin.
Attributes:
 write  ðŸ”—dt_imageio_module_storage_t.height number
The currently selected height for the plugin.
Attributes:
 write  ðŸ”—dt_imageio_module_storage_t.recommended_width number The recommended width for the plugin.
Attributes:
 write  ðŸ”—dt_imageio_module_storage_t.</description>
    </item>
    
    <item>
      <title>image_stack</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/image_stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/image_stack/</guid>
      <description>ðŸ”—Name image_stack.lua - process a stack of images
ðŸ”—Description This script provides another storage (export target) for darktable. Selected images are exported in the specified format to temporary storage. The images are aligned if the user requests it. When the images are ready, imagemagick is launched and uses the selected evaluate-sequence operator to process the images. The output file is written to a filename representing the input files in the format specified by the user.</description>
    </item>
    
    <item>
      <title>set_executable_path_preference</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/set_executable_path_preference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/set_executable_path_preference/</guid>
      <description>ðŸ”—NAME set_executable_path_preference
ðŸ”—SYNOPSIS set a preference for the path to an executable
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; df.set_executable_path_preference(executable, path) executable - string - the name of the executable to set the path for
path - string - the path to the binary
ðŸ”—DESCRIPTION set_executable_path_preference takes an executable name and path to the executable and registers the preference for later use.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.lighttable_mode</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/lighttable_mode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/lighttable_mode/</guid>
      <description>The navigation and zoom level UI in lighttable
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.lighttable_mode.layout function( [layout : types.dt_lighttable_layout_t] ) : types.dt_lighttable_layout_t Change the lighttable layout.
 [layout] - types.dt_lighttable_layout_t - The layout to switch to. If empty the current layout is unchanged return - types.dt_lighttable_layout_t - the current layout  ðŸ”—darktable.gui.libs.lighttable_mode.zoom_level function( [level : int] ) : int Change the lighttable zoom level.
 [level] - int - The zoom level to switch to.</description>
    </item>
    
    <item>
      <title>darktable.register_event</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.register_event/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.register_event/</guid>
      <description>function( event_name : string, event_type : string, callback : function, ... : variable ) This function registers a callback to be called when a given event happens. Events are documented in the event section.
 event_name - string - The name of the event used to manipulate the event. The combination of event_name and event_type must be unique. API 6.2.1 event_type - string - The name of the event to register to.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_storage_data_email</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_email/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_email/</guid>
      <description>dt_type
An object containing parameters to export to email.
Attributes:
 parent : types.dt_imageio_module_storage_t  </description>
    </item>
    
    <item>
      <title>image_time</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/image_time/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/image_time/</guid>
      <description>ðŸ”—Name image_time.lua - synchronize image time for images shot with different cameras
ðŸ”—Description image_time non destructively adjusts image times by modifying the database image exif_datetime_taken field. There are 4 modes: adjust time, set time, synchronize time, and reset time.
ðŸ”—ADJUST TIME adjust time mode lets you chose an offset in terms of years, months, days, hours, minutes, and seconds. The adjustment can be added or subtracted.
WARNING: When adding and subtracting months the result will usually be what is expected unless the time being adjusted is at the end of the month.</description>
    </item>
    
    <item>
      <title>split_filepath</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/split_filepath/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/split_filepath/</guid>
      <description>ðŸ”—NAME split_filepath
ðŸ”—SYNOPSIS split a filepath into parts
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.split_filepath(filepath) filepath - string - path and filename
ðŸ”—DESCRIPTION split_filepath splits a filepath into the path, filename, basename and filetype and puts that in a table
ðŸ”—RETURN VALUE result - table - a table containing the path, filename, basename, and filetype</description>
    </item>
    
    <item>
      <title>darktable.destroy_event</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.destroy_event/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.destroy_event/</guid>
      <description>API 6.2.1
function( event_name : string, event_type : string, ) This function removes the callback registered by darktable.register_event. Events are documented in the event section.
 event_name - string - The name of the event used to manipulate the event. The combination of event_name and event_type must be unique. event_type - string - The name of the event to register to.  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.live_view</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/live_view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/live_view/</guid>
      <description>The liveview window
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.register_lib</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.register_lib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.register_lib/</guid>
      <description>function( plugin_name : string, name : string, expandable : boolean, resettable : boolean, containers : table of types.dt_lua_view_t =&amp;gt; [ types.dt_ui_container_t, int ], widget : types.lua_widget, view_enter : function, view_leave : function ) Register a new lib object. A lib is a graphical element of darktable&amp;rsquo;s user interface
 plugin_name - string - A unique name for your library name - string - A user-visible name for your library expandable - boolean - whether this lib should be expandable or not resettable - boolean - whether this lib has a reset button or not containers - table of types.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_storage_data_latex</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_latex/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_latex/</guid>
      <description>dt_type
An object containing parameters to export to latex.
Attributes:
 parent : types.dt_imageio_module_storage_t  ðŸ”—dt_imageio_module_storage_data_latex.filename string
The filename to export to.
Attributes:
 write  ðŸ”—dt_imageio_module_storage_data_latex.title string
The title to use for export.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>kml_export</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/kml_export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/kml_export/</guid>
      <description>ðŸ”—Name kml_export.lua - export a kml file from selected images
ðŸ”—Description darktable KML export script
ðŸ”—Usage  start this script from script manager when choosing file format, pick JPEG or PNG as Google Earth doesn&amp;rsquo;t support other formats  ðŸ”—Additional Software Required  zip (at the moment Linux only and only if you create KMZ files) magick (ImageMagick) xdg-user-dir (Linux)  ðŸ”—Limitations This script is only tested with Linux
ðŸ”—Author Tobias Jakobs</description>
    </item>
    
    <item>
      <title>test_file</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/test_file/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.api.manual/dtutils.file/test_file/</guid>
      <description>ðŸ”—NAME test_file
ðŸ”—SYNOPSIS test a file to see what it is
ðŸ”—USAGE local df = require &amp;quot;lib/dtutils.file&amp;quot; local result = df.test_file(path, test) path - string - path and filename test - char - one of d, e, f, x where
 d - directory e - exists f - file x - executable  ðŸ”—DESCRIPTION test_file checks a specified path to see if it meets the specified test
ðŸ”—RETURN VALUE result - boolean - true if the path satisfies the test, false if not</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.location</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/location/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/location/</guid>
      <description>The location ui
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.register_storage</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.register_storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.register_storage/</guid>
      <description>function( plugin_name : string, name : string, [store : function], [finalize : function], [supported : function], [initialize : function], [widget : types.lua_widget] ) This function will add a new storage implemented in Lua. A storage is a module that is responsible for handling images once they have been generated during export. Examples of core storages include filesystem, e-mail, pwigo&amp;hellip;
 plugin_name - string - A unique name for the plugin. name - string - A human readable name for the plugin.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_storage_data_piwigo</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_piwigo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_piwigo/</guid>
      <description>dt_type
An object containing parameters to export to piwigo.
Attributes:
 parent : types.dt_imageio_module_storage_t  </description>
    </item>
    
    <item>
      <title>LabelsToTags</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/labelstotags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/labelstotags/</guid>
      <description>ðŸ”—Name LabelsToTags.lua - mass apply tags to images
ðŸ”—Description Allows the mass-application of tags using color labels and ratings as a guide.
ðŸ”—Usage In your &amp;lsquo;luarc&amp;rsquo; file or elsewhere, use the function &amp;lsquo;register_tag_mapping&amp;rsquo;, defined in this module, to specify one or more tag mappings for use by the module. Any mappings so registered will be selectable, according to their given names, in the module&amp;rsquo;s &amp;ldquo;mapping&amp;rdquo; combo box.
A mapping takes the form of a table mapping patterns to lists of tags.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.map_settings</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/map_settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/map_settings/</guid>
      <description>The map setting window
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.styles</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.styles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.styles/</guid>
      <description>This pseudo table allows you to access and manipulate styles.
ðŸ”—darktable.styles.# types.dt_style_t
Each existing style has a numeric index; you can iterate them using ipairs.
ðŸ”—darktable.styles.create function( image : types.dt_lua_image_t, name : string, description : string ) : types.dt_style_t Create a new style based on an image.
 image - types.dt_lua_image_t - The image to create the style from. name - string - The name to give to the new style.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_storage_data_gallery</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_gallery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_gallery/</guid>
      <description>dt_type
An object containing parameters to export to gallery.
Attributes:
 parent : types.dt_imageio_module_storage_t  ðŸ”—dt_imageio_module_storage_data_gallery.filename string
The filename to export to.
Attributes:
 write  ðŸ”—dt_imageio_module_storage_data_gallery.title string
The title to use for export.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>OpenInExplorer</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/openinexplorer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/openinexplorer/</guid>
      <description>ðŸ”—Name OpenInExplorer.lua - open an images containing folder
ðŸ”—Description This plugin adds the module &amp;ldquo;OpenInExplorer&amp;rdquo; to darktable&amp;rsquo;s lighttable view.
ðŸ”—Usage Require this file in your luarc file, as with any other dt plug-in
Select the photo(s) you wish to find in your operating system&amp;rsquo;s file manager and press &amp;ldquo;show in file explorer&amp;rdquo; in the &amp;ldquo;selected images&amp;rdquo; section.
  Nautilus (Linux), Explorer (Windows), and Finder (macOS prior to Mojave) will open one window for each selected image at the file&amp;rsquo;s location.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.masks</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/masks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/masks/</guid>
      <description>The masks window
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.tags</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/darktable.tags/</guid>
      <description>Allows access to all existing tags.
ðŸ”—darktable.tags.# types.dt_lua_tag_t
Each existing tag has a numeric entry in the tags table - use ipairs to iterate over them.
ðŸ”—darktable.tags.create function( name : string ) Creates a new tag and return it. If the tag exists return the existing tag.
 name - string - The name of the new tag.  ðŸ”—darktable.tags.find function( name : string ) : types.dt_lua_tag_t Returns the tag object or nil if the tag doesn&amp;rsquo;t exist.</description>
    </item>
    
    <item>
      <title>dt_imageio_module_storage_data_disk</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_disk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_module_storage_data_disk/</guid>
      <description>dt_type
An object containing parameters to export to disk.
Attributes:
 parent : types.dt_imageio_module_storage_t  ðŸ”—dt_imageio_module_storage_data_disk.filename string
The filename to export to.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>passport_guide</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/passport_guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/passport_guide/</guid>
      <description>ðŸ”—Name ðŸ”—Description guides for cropping passport photos based on documents from the Finnish police (https://www.poliisi.fi/instancedata/prime_product_julkaisu/intermin/embeds/poliisiwwwstructure/38462_Passikuvaohje_EN.pdf) describing passport photo dimensions of 47x36 mm and 500x653 px for digital biometric data stored in passports. They use ISO 19794-5 standard based on ICAO 9303 regulations which should also be compliant for all of Europe.
ðŸ”—Usage  add the following line in the file $CONFIGDIR/luarc require &amp;ldquo;passport_guide&amp;rdquo; (optional) add the line: &amp;ldquo;plugins/darkroom/clipping/extra_aspect_ratios/passport 36x47mm=47:36&amp;rdquo; to $CONFIGDIR/darktablerc when using the cropping tool, select &amp;ldquo;passport&amp;rdquo; as guide and if you added the line in your luarc select &amp;ldquo;passport 36x47mm&amp;rdquo; as aspect  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author KÃ¥re Hampf</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.metadata</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/metadata/</guid>
      <description>The widget allowing modification of metadata fields on the current image
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_lua_film_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_film_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_film_t/</guid>
      <description>dt_type
A film in darktable; this represents a directory containing imported images.
Attributes:
 has_tostring  ðŸ”—dt_lua_film_t.move_image see darktable.database.move_image
ðŸ”—dt_lua_film_t.copy_image see darktable.database.copy_image
ðŸ”—dt_lua_film_t.# types.dt_lua_image_t
The different images within the film.
ðŸ”—dt_lua_film_t.id number A unique numeric id used by this film.
Attributes:
 write  ðŸ”—dt_lua_film_t.path string
The path represented by this film.
Attributes:
 write  ðŸ”—dt_lua_film_t.delete self:function( [force : boolean] ) Removes the film from the database.
 self - types.</description>
    </item>
    
    <item>
      <title>pdf_slideshow</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/pdf_slideshow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/pdf_slideshow/</guid>
      <description>ðŸ”—Name pdf_slideshow.lua - generate a pdf slideshow
ðŸ”—Description Generates a PDF slideshow (via Latex) containing all selected images one per slide.
ðŸ”—Usage  start this script from script manager  This plugin will add a new exporter that will allow you to generate a pdf slideshow. The interface will let you add:
 a global title for the slideshow (prefix in all slide label) a delay for the transition between each slide  Each slide will contain a single picture with a label at the bottom with the format (all fields can be the empty string):</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.metadata_view</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/metadata_view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/metadata_view/</guid>
      <description>The widget displaying metadata about the current image
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.metadata_view.register_info function( name : string, callback : function ) Register a field in the image information module with a callback function to update the field
 name - string - The name displayed for the new information callback - function - The function providing the info  callback -
function( image : types.dt_lua_image_t ) : string  image - types.</description>
    </item>
    
    <item>
      <title>dt_style_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_style_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_style_t/</guid>
      <description>dt_type A style that can be applied to an image. Attributes:
 has_tostring  ðŸ”—dt_style_t.delete see darktable.styles.delete
ðŸ”—dt_style_t.duplicate see darktable.styles.duplicate
ðŸ”—dt_style_t.apply see darktable.styles.apply
ðŸ”—dt_style_t.export see darktable.styles.export
ðŸ”—dt_style_t.name string
The name of the style.
ðŸ”—dt_style_t.description string
The description of the style.
ðŸ”—dt_style_t.# types.dt_style_item_t
The different items that make the style.</description>
    </item>
    
    <item>
      <title>photils</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/photils/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/photils/</guid>
      <description>ðŸ”—Name photils.lua - auto tag images based on feature recognition
ðŸ”—Description A darktable plugin that tries to predict keywords based on the selected image. This plugin uses photils-cli to handle this task. Photils-cli is an application that passes the image through a neural network, classifies it, and extracts the suggested tags. Everything happens offline without the need that your data are sent over the internet.
ðŸ”—Usage  start this script from script manager Select an image Press &amp;ldquo;get tags&amp;rdquo; Select the tags you want from a list of suggestions Press &amp;ldquo;Attach .</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.modulegroups</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/modulegroups/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/modulegroups/</guid>
      <description>The icons describing the different iop groups
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_style_item_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_style_item_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_style_item_t/</guid>
      <description>dt_type
An element that is part of a style.
Attributes:
 has_tostring  ðŸ”—dt_style_item_t.name string
The name of the style item.
ðŸ”—dt_style_item_t.num number
The position of the style item within its style.</description>
    </item>
    
    <item>
      <title>quicktag</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/quicktag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/quicktag/</guid>
      <description>ðŸ”—Name quicktag.lua - add shortcuts to speed up tagging
ðŸ”—Description For faster attaching your favorite tags, the script adds shortcuts and the module &amp;ldquo;quicktag&amp;rdquo; in lighttable mode with a changeable number of buttons. A tag can be assigned to each button. If the tags do not exist in your database, they are added to the database the first time they are attached to an image.
The number of buttons/shortcuts can be changed in the lua preferences.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.module_toolbox</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/module_toolbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/module_toolbox/</guid>
      <description>The tools on the bottom line of the UI (overexposure)
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_lua_tag_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_tag_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_tag_t/</guid>
      <description>dt_type
A tag that can be attached to an image.
Attributes:
has_tostring
ðŸ”—dt_lua_tag_t.delete see darktable.tags.delete
ðŸ”—dt_lua_tag_t.attach see darktable.tags.attach
ðŸ”—dt_lua_tag_t.detach see darktable.tags.detach
ðŸ”—dt_lua_tag_t.name string
The name of the tag.
ðŸ”—dt_lua_tag_t.# types.dt_lua_image_t
The images that have that tag attached to them.</description>
    </item>
    
    <item>
      <title>rate_group</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/rate_group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/rate_group/</guid>
      <description>ðŸ”—Name rate_group.lua - rate groups of images
ðŸ”—Description Provide shortcuts for rating or rejecting all images within a group; particularly useful for RAW+JPEG shooters employing a star rating workflow like the below:
http://blog.chasejarvis.com/blog/2011/03/photo-editing-101/
ðŸ”—Usage Assign a keyboard shortcut to each action via settings &amp;gt; shortcuts &amp;gt; lua
I use the following shortcuts:
 Reject group: Ctrl+R Rate group 1: Ctrl+1 Rate group 2: Ctrl+2 Rate group 3: Ctrl+3 Rate group 4: Ctrl+4 Rate group 5: Ctrl+5 Rate group 0: Ctrl+0  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Dom H - dom@hxy.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.navigation</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/navigation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/navigation/</guid>
      <description>The full image preview to allow navigation
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_lua_lib_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_lib_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_lib_t/</guid>
      <description>dt_type
The type of a UI lib
ðŸ”—dt_lua_lib_t.id string
A unit string identifying the lib
ðŸ”—dt_lua_lib_t.name string
The translated title of the UI element
ðŸ”—dt_lua_lib_t.version number
The version of the internal data of this lib
ðŸ”—dt_lua_lib_t.visible boolean
Allow to make a lib module completely invisible to the user. Note that if the module is invisible the user will have no way to restore it without lua
Attributes:
 implicit_yield write  ðŸ”—dt_lua_lib_t.</description>
    </item>
    
    <item>
      <title>rename_tags</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/rename-tags/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/rename-tags/</guid>
      <description>ðŸ”—Name rename-tags.lua - rename tags
ðŸ”—Description ðŸ”—Usage  In lighttable there is a new entry: &amp;lsquo;rename tag&amp;rsquo; Enter old tag (this one gets deleted!) Enter new tag name  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Sebastian Witt - se.witt@gmx.net
Bill Ferguson - wpferguson@gmail.com</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.print_settings</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/print_settings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/print_settings/</guid>
      <description>The settings window in the print view
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_lua_view_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_view_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_view_t/</guid>
      <description>dt_type
A darktable view
ðŸ”—dt_lua_view_t.id string
A unique string identifying the view
ðŸ”—dt_lua_view_t.name string
The name of the view</description>
    </item>
    
    <item>
      <title>RL_out_sharp</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/rl_out_sharp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/rl_out_sharp/</guid>
      <description>ðŸ”—Name RL_out_sharp.lua - Richardson-Lucy output sharpening using GMic
ðŸ”—Description This script provides a new target storage &amp;ldquo;RL output sharpen&amp;rdquo;. Images exported will be sharpened using GMic (RL deblur algorithm)
ðŸ”—EXAMPLE set sigma = 0.7, iterations = 10, jpeg output quality = 95, to correct blur due to image resize for web usage
ðŸ”—Usage  start this script from script manager in lua preferences, select the GMic cli executable from &amp;ldquo;export selected&amp;rdquo;, choose &amp;ldquo;RL output sharpen&amp;rdquo; configure output folder configure RL parameters with sliders configure temp files format and quality, jpg 8bpp (good quality) and tif 16bpp (best quality) are supported configure other export options (size, etc.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.ratings</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/ratings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/ratings/</guid>
      <description>The stars to set the rating of an image
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_lua_backgroundjob_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_backgroundjob_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_backgroundjob_t/</guid>
      <description>dt_type
A lua-managed entry in the backgroundjob lib
ðŸ”—dt_lua_backgroundjob_t.percent number
The value of the progress bar, between 0 and 1. will return nil if there is no progress bar, will raise an error if read or written on an invalid job
Attributes:
 write  ðŸ”—dt_lua_backgroundjob_t.valid boolean
True if the job is displayed, set it to false to destroy the entry An invalid job cannot be made valid again
Attributes:</description>
    </item>
    
    <item>
      <title>select_untagged</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/select_untagged/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/select_untagged/</guid>
      <description>ðŸ”—Name select_untagged.lua - select all images that aren&amp;rsquo;t tagged
ðŸ”—Description Enable selection of untagged images (darktable|* tags are ignored)
ðŸ”—Usage ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Jannis_V</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.recentcollect</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/recentcollect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/recentcollect/</guid>
      <description>The recent collection UI element
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_lua_snapshot_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_snapshot_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_snapshot_t/</guid>
      <description>dt_type
The description of a snapshot in the snapshot lib
Attributes:
has_tostring
ðŸ”—dt_lua_snapshot_t.filename string
The filename of an image containing the snapshot
ðŸ”—dt_lua_snapshot_t.select self:function( ) Activates this snapshot on the display. To deactivate all snapshot you need to call this function on the active snapshot
 self - types.dt_lua_snapshot_t - The snapshot to activate  ðŸ”—dt_lua_snapshot_t.name string
The name of the snapshot, as seen in the UI</description>
    </item>
    
    <item>
      <title>slideshowMusic</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/slideshowmusic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/slideshowmusic/</guid>
      <description>ðŸ”—Name slideshowMusic.lua - play music during a slideshow
ðŸ”—Description darktable script to play music during a Slideshow
ðŸ”—Usage  start this script from script manager  ðŸ”—Additional Software Required You need rhythmbox-client installed to use this script
ðŸ”—Limitations ðŸ”—Author Tobias Jakobs</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.select</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/select/</guid>
      <description>The buttons that allow quickly changing the selection
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.select.register_selection function( name : string label : string, callback : function, [tooltip : string] ) Add a new button and call a callback when it is clicked
 name - string - The name to use to refer to the select button API 6.2.2 label - string - The label to display on the button callback - function - The function to call when the button is pressed [tooltip] - string - The tooltip to use on the new button  callback -</description>
    </item>
    
    <item>
      <title>hint_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/hint_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/hint_t/</guid>
      <description>enum
a hint on the way to encode a webp image
Values:
 hint_default hint_picture hint_photo hint_graphic  </description>
    </item>
    
    <item>
      <title>transfer_hierarchy</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/transfer_hierarchy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/transfer_hierarchy/</guid>
      <description>ðŸ”—Name transfer_hierarchy.lua - move or copy image hierarchies from one location to another
ðŸ”—Description Allows the moving or copying of images from one directory tree to another, while preserving the existing hierarchy.
ðŸ”—Usage darktable&amp;rsquo;s native operations for moving and copying images in batches allow only one directory to be specified as the destination for each batch. Those wanting to move or copy images from a hierarchy of directories within darktable while preserving the directory structure, must take the laborious step of performing the operation one individual directory at a time.</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.session</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/session/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/session/</guid>
      <description>The session UI when tethering
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_ui_container_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_ui_container_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_ui_container_t/</guid>
      <description>enum
A place in the darktable UI where a lib can be placed
Values:
 DT_UI_CONTAINER_PANEL_LEFT_TOP DT_UI_CONTAINER_PANEL_LEFT_CENTER DT_UI_CONTAINER_PANEL_LEFT_BOTTOM DT_UI_CONTAINER_PANEL_RIGHT_TOP DT_UI_CONTAINER_PANEL_RIGHT_CENTER DT_UI_CONTAINER_PANEL_RIGHT_BOTTOM DT_UI_CONTAINER_PANEL_TOP_LEFT DT_UI_CONTAINER_PANEL_TOP_CENTER DT_UI_CONTAINER_PANEL_TOP_RIGHT DT_UI_CONTAINER_PANEL_CENTER_TOP_LEFT DT_UI_CONTAINER_PANEL_CENTER_TOP_CENTER DT_UI_CONTAINER_PANEL_CENTER_TOP_RIGHT DT_UI_CONTAINER_PANEL_CENTER_BOTTOM_LEFT DT_UI_CONTAINER_PANEL_CENTER_BOTTOM_CENTER DT_UI_CONTAINER_PANEL_CENTER_BOTTOM_RIGHT DT_UI_CONTAINER_PANEL_BOTTOM  </description>
    </item>
    
    <item>
      <title>video_ffmpeg</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/video_ffmpeg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/contrib/video_ffmpeg/</guid>
      <description>ðŸ”—Name video_ffmpeg.lua - create a timelapse video from selected images
ðŸ”—Description This plugin will add the new export module &amp;ldquo;video ffmpeg&amp;rdquo;.
ðŸ”—Usage  Go to Lighttable Select images you want to use as a video ffmpeg frames In image export module select &amp;ldquo;video ffmpeg&amp;rdquo; Configure you video settings Export  ðŸ”—Additional Software Required ffmpeg
ðŸ”—Limitations This script has been tested under Linux only
ðŸ”—Author Dominik Markiewicz</description>
    </item>
    
    <item>
      <title>darktable.gui.libs.snapshots</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/snapshots/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/snapshots/</guid>
      <description>The UI element that manipulates snapshots in darkroom
Attributes:
 has_tostring parent : types.dt_lua_lib_t  ðŸ”—darktable.gui.libs.snapshots.ratio number - The place in the screen where the line separating the snapshot is. Between 0 and 1
Attributes:
 write  darktable.gui.libs.snapshots.direction
types.snapshot_direction_t - The direction of the snapshot overlay
Attributes:
 write  ðŸ”—darktable.gui.libs.snapshots.# types.snapshot_direction_t - The different snapshots for the image
ðŸ”—darktable.gui.libs.snapshots.selected types.snapshot_direction_t - The currently selected snapshot
ðŸ”—darktable.gui.libs.snapshots.take_snapshot function( ) Take a snapshot of the current image and add it to the UI The snapshot file will be generated at the next redraw of the main window</description>
    </item>
    
    <item>
      <title>snapshot_direction_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/snapshot_direction_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/snapshot_direction_t/</guid>
      <description>enum
Which part of the main window is occupied by a snapshot
Values:
 left right top bottom  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.styles</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/styles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/styles/</guid>
      <description>The style selection menu
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_imageio_j2k_format_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_j2k_format_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_j2k_format_t/</guid>
      <description>enum
J2K format type
Values:
 j2k jp2  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.tagging</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/tagging/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/tagging/</guid>
      <description>The tag manipulation UI
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>dt_imageio_j2k_preset_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_j2k_preset_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_j2k_preset_t/</guid>
      <description>enum
J2K preset type
Values:
 off cinema2k_24 cinema2k_48 cinema4k_24  </description>
    </item>
    
    <item>
      <title>comp_type_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/comp_type_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/comp_type_t/</guid>
      <description>enum
Type of compression for webp
Values:
 webp_lossy webp_lossless  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.viewswitcher</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/viewswitcher/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/viewswitcher/</guid>
      <description>The labels allowing to switch view
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>darktable.gui.libs.view_toolbox</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/view_toolbox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/darktable/gui/libs/view_toolbox/</guid>
      <description>The view_toolbox window
Attributes:
 has_tostring parent : types.dt_lua_lib_t  </description>
    </item>
    
    <item>
      <title>lua_pref_type</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_pref_type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_pref_type/</guid>
      <description>enum
The type of value to save in a preference
Values:
 enum directory file string bool integer float lua  </description>
    </item>
    
    <item>
      <title>dt_imageio_exr_compression_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_exr_compression_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_imageio_exr_compression_t/</guid>
      <description>enum
The type of compression to use for the EXR image
Values:
 off rle zips zip piz pxr24 b44 b44a  </description>
    </item>
    
    <item>
      <title>dt_lib_collect_params_rule_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lib_collect_params_rule_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lib_collect_params_rule_t/</guid>
      <description>dt_type
A single rule for filtering a collection
ðŸ”—dt_lib_collect_params_rule_t.mode types.dt_lib_collect_mode_t
How this rule is applied after the previous one. Unused for the first rule
Attributes:
 write  ðŸ”—dt_lib_collect_params_rule_t.data string
The text segment of the rule. Exact content depends on the type of rule
Attributes:
 write  ðŸ”—dt_lib_collect_params_rule_t.item types.dt_collection_properties_t
The item on which this rule filter. i.e the type of the rule
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>dt_lib_collect_mode_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lib_collect_mode_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lib_collect_mode_t/</guid>
      <description>enum
The logical operators to apply between rulesAttributes:
Values:
 DT_LIB_COLLECT_MODE_AND DT_LIB_COLLECT_MODE_OR DT_LIB_COLLECT_MODE_AND_NOT  </description>
    </item>
    
    <item>
      <title>dt_collection_properties_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_properties_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_properties_t/</guid>
      <description>enum
The different elements on which a collection can be filtered
Values:
 DT_COLLECTION_PROP_FILMROLL DT_COLLECTION_PROP_FOLDERS DT_COLLECTION_PROP_CAMERA DT_COLLECTION_PROP_TAG DT_COLLECTION_PROP_DAY DT_COLLECTION_PROP_TIME DT_COLLECTION_PROP_IMPORT_TIMESTAMP DT_COLLECTION_PROP_CHANGE_TIMESTAMP DT_COLLECTION_PROP_EXPORT_TIMESTAMP DT_COLLECTION_PROP_PRINT_TIMESTAMP DT_COLLECTION_PROP_HISTORY DT_COLLECTION_PROP_COLORLABEL DT_COLLECTION_PROP_TITLE DT_COLLECTION_PROP_DESCRIPTION DT_COLLECTION_PROP_CREATOR DT_COLLECTION_PROP_PUBLISHER DT_COLLECTION_PROP_RIGHTS DT_COLLECTION_PROP_LENS DT_COLLECTION_PROP_FOCAL_LENGTH DT_COLLECTION_PROP_ISO DT_COLLECTION_PROP_APERTURE DT_COLLECTION_PROP_FILENAME DT_COLLECTION_PROP_GEOTAGGING  </description>
    </item>
    
    <item>
      <title>dt_collection_sort_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_sort_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_sort_t/</guid>
      <description>enum
The different elements on which a collection can be sorted
Values:
 DT_COLLECTION_SORT_NONE DT_COLLECTION_SORT_FILENAME DT_COLLECTION_SORT_DATETIME DT_COLLECTION_SORT_RATING DT_COLLECTION_SORT_ID DT_COLLECTION_SORT_COLOR DT_COLLECTION_SORT_GROUP DT_COLLECTION_SORT_PATH DT_COLLECTION_SORT_CUSTOM_ORDER DT_COLLECTION_SORT_TITLE DT_COLLECTION_SORT_DESCRIPTION DT_COLLECTION_SORT_ASPECT_RATIO DT_COLLECTION_SORT_SHUFFLE  </description>
    </item>
    
    <item>
      <title>dt_collection_sort_order_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_sort_order_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_sort_order_t/</guid>
      <description>enum
The different orders that a collection can be sorted in
Values:
 DT_COLLECTION_SORT_ORDER_ASCENDING DT_COLLECTION_SORT_ORDER_DESCENDING  </description>
    </item>
    
    <item>
      <title>dt_collection_filter_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_filter_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_filter_t/</guid>
      <description>enum
The different elements on which a collection can be filtered
Values:
 DT_COLLECTION_FILTER_ALL DT_COLLECTION_FILTER_STAR_NO DT_COLLECTION_FILTER_STAR_1 DT_COLLECTION_FILTER_STAR_2 DT_COLLECTION_FILTER_STAR_3 DT_COLLECTION_FILTER_STAR_4 DT_COLLECTION_FILTER_STAR_5 DT_COLLECTION_FILTER_REJECT DT_COLLECTION_FILTER_NOT_REJECT  </description>
    </item>
    
    <item>
      <title>dt_collection_rating_comperator_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_rating_comperator_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_collection_rating_comperator_t/</guid>
      <description>enum
The different ways in which a collection filter can be compared
Values:
 DT_COLLECTION_RATING_COMP_LT DT_COLLECTION_RATING_COMP_LEQ DT_COLLECTION_RATING_COMP_EQ DT_COLLECTION_RATING_COMP_GEQ DT_COLLECTION_RATING_COMP_GT DT_COLLECTION_RATING_COMP_NE DT_COLLECTION_RATING_N_COMPS  </description>
    </item>
    
    <item>
      <title>dt_lua_orientation_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_orientation_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_orientation_t/</guid>
      <description>enum
A possible orientation for a widget
Values:
 horizontal vertical  </description>
    </item>
    
    <item>
      <title>dt_lua_align_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_align_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_align_t/</guid>
      <description>enum
The alignment of a label
Values:
 fill start end center baseline  </description>
    </item>
    
    <item>
      <title>dt_lua_ellipsize_mode_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_ellipsize_mode_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_ellipsize_mode_t/</guid>
      <description>enum
The ellipsize mode of a label
Values:
 none start middle end  </description>
    </item>
    
    <item>
      <title>dt_lua_cairo_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_cairo_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lua_cairo_t/</guid>
      <description>dt_type
A wrapper around a cairo drawing context. You probably shouldn&amp;rsquo;t use this after the callback that got it passed returned. For more details of the member functions have a look at the cairo documentation for the drawing context, transformations and paths.
ðŸ”—dt_lua_cairo_t.save self:function( ) Save the state of the drawing context.
 self - types.dt_lua_cairo_t - The context to modify.  ðŸ”—types.dt_lua_cairo_t.restore self:function( ) Restore a previously saved state.</description>
    </item>
    
    <item>
      <title>dt_ui_panel_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_ui_panel_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_ui_panel_t/</guid>
      <description>enum
The different user interface panels
Values:
 DT_UI_PANEL_TOP DT_UI_PANEL_CENTER_TOP DT_UI_PANEL_CENTER_BOTTOM DT_UI_PANEL_LEFT DT_UI_PANEL_RIGHT DT_UI_PANEL_BOTTOM DT_UI_PANEL_SIZE  </description>
    </item>
    
    <item>
      <title>dt_lighttable_layout_t</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lighttable_layout_t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/dt_lighttable_layout_t/</guid>
      <description>enum
The different lighttable layouts
Values:
 DT_LIGHTTABLE_LAYOUT_FIRST DT_LIGHTTABLE_LAYOUT_ZOOMABLE DT_LIGHTTABLE_LAYOUT_FILEMANAGER DT_LIGHTTABLE_LAYOUT_CULLING DT_LIGHTTABLE_LAYOUT_LAST  </description>
    </item>
    
    <item>
      <title>lua_widget</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_widget/</guid>
      <description>dt_type
Common parent type for all lua-handled widgets
Attributes:
 has_tostring  ðŸ”—lua_widget.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_widget.name Lua API 6.2.0
string or nil
Name assigned to the widget for CSS styling purposes.
Attributes:
 write  ðŸ”—lua_widget.sensitive boolean
Set if the widget is enabled/disabled
Attributes:
 write  ðŸ”—lua_widget.tooltip string or nil
Tooltip to display for the widget
Attributes:
 write  ðŸ”—lua_widget.visible Lua API 7.</description>
    </item>
    
    <item>
      <title>lua_container</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_container/</guid>
      <description>dt_type
A widget containing other widgets
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_container.__call see types.lua_widget.As a function
ðŸ”—lua_container.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_container.# types.lua_widget
The widgets contained by the box. You can append widgets by adding them at the end of the list. You can remove widgets by setting them to nil.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>lua_check_button</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_check_button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_check_button/</guid>
      <description>dt_type
A checkable button with a label next to it Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_check_button.__call see types.lua_widget.As a function
ðŸ”—lua_check_button.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_check_button.label string
The label displayed next to the button
Attributes:
 write  ðŸ”—lua_check_button.value boolean
If the widget is checked or not
Attributes:
 write  ðŸ”—lua_check_button.clicked_callback function( widget : types.lua_widget ) A function to call on button click</description>
    </item>
    
    <item>
      <title>lua_label</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_label/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_label/</guid>
      <description>dt_type
A label containing some text
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_label.__call see types.lua_widget.As a function
ðŸ”—lua_label.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_label.label string
The label displayed
Attributes:
 write  ðŸ”—lua_label.selectable boolean
True if the label content should be selectable
Attributes:
 write  ðŸ”—lua_label.halign types.dt_lua_align_t
The horizontal alignment of the label
Attributes:
 write  ðŸ”—lua_label.ellipsize types.dt_lua_ellipsize_mode_t
The ellipsize mode of the label</description>
    </item>
    
    <item>
      <title>lua_button</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_button/</guid>
      <description>dt_type
A clickable button
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_button.__call see types.lua_widget.As a function
ðŸ”—lua_button.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_button.label string
The label displayed on the button
Attributes:
 write  ðŸ”—lua_button.ellipsize types.dt_lua_ellipsize_mode_t
The ellipsize mode of the button label
Attributes:
 write  ðŸ”—lua_button.clicked_callback function( widget : types.lua_widget ) A function to call on button click
 widget - types.lua_widget - The widget that triggered the callback  Attributes:</description>
    </item>
    
    <item>
      <title>lua_box</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_box/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_box/</guid>
      <description>dt_type
A container for widget in a horizontal or vertical list
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_box.__call see types.lua_widget.As a function
ðŸ”—lua_box.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_box.orientation types.dt_lua_orientation_t
The orientation of the box.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>lua_entry</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_entry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_entry/</guid>
      <description>dt_type
A widget in which the user can input text
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_entry.__call see types.lua_widget.As a function
ðŸ”—lua_entry.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_entry.text string
The content of the entry
Attributes:
 write  ðŸ”—lua_entry.placeholder string
The text to display when the entry is empty
Attributes:
 write  ðŸ”—lua_entry.is_password boolean
True if the text content should be hidden
Attributes:
 write  ðŸ”—lua_entry.</description>
    </item>
    
    <item>
      <title>lua_separator</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_separator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_separator/</guid>
      <description>dt_type
A widget providing a separation in the UI.
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_separator.__call see types.lua_widget.As a function
ðŸ”—lua_separator.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_separator.orientation string
The orientation of the separator.
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>lua_combobox</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_combobox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_combobox/</guid>
      <description>dt_type
A widget with multiple text entries in a menu. This widget can be set as editable at construction time. If it is editable the user can type a value and is not constrained by the values in the menu.
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_combobox.__call see types.lua_widget.As a function
ðŸ”—lua_combobox.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_combobox.value string
The text content of the selected entry, can be nil.</description>
    </item>
    
    <item>
      <title>lua_file_chooser_button</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_file_chooser_button/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_file_chooser_button/</guid>
      <description>dt_type
A button that allows the user to select an existing file
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_file_chooser_button.__call see types.lua_widget.As a function
ðŸ”—lua_file_chooser_button.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_file_chooser_button.title string
The title of the window when choosing a file
Attributes:
 write  ðŸ”—lua_file_chooser_button.value string
The currently selected file
Attributes:
 write  ðŸ”—lua_file_chooser_button.changed_callback function( widget : types.lua_widget ) A function to call when the value field changes (character entered or value selected)</description>
    </item>
    
    <item>
      <title>lua_stack</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_stack/</guid>
      <description>dt_type
A container that will only show one of its child at a time
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_stack.__call see types.lua_widget.As a function
ðŸ”—lua_stack.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_stack.active types.lua_widget or nil
The currently selected child, can be nil if the container has no child, can be set to one of the child widget or to an index in the child table</description>
    </item>
    
    <item>
      <title>lua_slider</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_slider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_slider/</guid>
      <description>dt_type
A slider that can be set by the user
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_slider.__call see types.lua_widget.As a function
ðŸ”—lua_slider.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_slider.soft_min number
The soft minimum value for the slider, the slider can&amp;rsquo;t go beyond this point
Attributes:
 write  ðŸ”—lua_slider.soft_max number
The soft maximum value for the slider, the slider can&amp;rsquo;t go beyond this point
Attributes:
 write  ðŸ”—lua_slider.</description>
    </item>
    
    <item>
      <title>lua_text_view</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_text_view/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_text_view/</guid>
      <description>dt_type
A multiline text input widget
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_text_view.__call see types.lua_widget.As a function
ðŸ”—lua_text_view.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_text_view.text string
The text in the widget
Attributes:
 write  ðŸ”—lua_text_view.editable boolean
False if the entry should be read-only
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>lua_section_label</title>
      <link>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_section_label/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.api.manual/types/lua_section_label/</guid>
      <description>dt_type
A section label
Attributes:
 has_tostring parent : types.lua_widget  ðŸ”—lua_section_label.__call see types.lua_widget.As a function
ðŸ”—types.lua_section_label.extra registration parameters This widget has no extra registration parameters
ðŸ”—lua_section_label.label string
The section name
Attributes:
 write  </description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://darktable-org.github.io/luadocs/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>

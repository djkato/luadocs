<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>examples on darktable lua documentation</title>
    <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/</link>
    <description>Recent content in examples on darktable lua documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>api_version</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/api_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/api_version/</guid>
      <description>ðŸ”—Name api_version.lua - show the Lua API version
ðŸ”—Description darktable script to show the Lua API version in the preferences
ðŸ”—Usage  require this script from your main lua file  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>darkroom_demo</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/darkroom_demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/darkroom_demo/</guid>
      <description>ðŸ”—Name darkroom_demo - an example script demonstrating how to control image display in darkroom mode
ðŸ”—Description darkroom_demo is an example script showing how to control the currently displayed image in darkroom mode using lua.
ðŸ”—Usage  require this script from your main lua file  ðŸ”—Additional Software Required None
ðŸ”—Limitations ðŸ”—Author Bill Ferguson - wpferguson@gmail.com
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>gettextExample</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/gettextexample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/gettextexample/</guid>
      <description>ðŸ”—Name gettextExample.lua - darktable script to show how translations works
ðŸ”—Description To create the .po file run: xgettext -l lua gettextExample.lua
xgettext is not a lua tool, it knows (almost) nothing about Lua, and not enough to do a proper parsing. It takes a text file (In our case a Lua file) and recognises a few (language dependant) keyword in there. It matches those keywords with internal description on how functions are called and creates the .</description>
    </item>
    
    <item>
      <title>hello_world</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/hello_world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/hello_world/</guid>
      <description>ðŸ”—Name hello_world.lua - a simple lua script
ðŸ”—Description prints &amp;ldquo;hello world when DT starts
ðŸ”—Usage  require this file from your main lua config file:  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Ellinghaus
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>lighttable_demo</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/lighttable_demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/lighttable_demo/</guid>
      <description>ðŸ”—Name lighttable_demo.lua - an example script demonstrating how to control lighttable display modes
ðŸ”—Description lighttable_demo is an example script showing how to control lighttable layout, sorting, and filtering from a lua script. If the selected directory has different ratings, color labels, etc, then the sorting and filtering display is a little clearer.
ðŸ”—Usage  require this script from your main lua file  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Bill Ferguson - wpferguson@gmail.</description>
    </item>
    
    <item>
      <title>moduleExample</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/moduleexample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/moduleexample/</guid>
      <description>ðŸ”—Name moduleExample.lua - create a new example lighttable module
ðŸ”—Description More informations about building user interface elements: https://www.darktable.org/usermanual/ch09.html.php#lua_gui_example And about new_widget here: https://www.darktable.org/lua-api/index.html.php#darktable_new_widget
ðŸ”—Usage   require this script from your luarc file To do this add this line to the file .config/darktable/luarc: require &amp;ldquo;examples/moduleExample&amp;rdquo;
  it creates a new example lighttable module
  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>name</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/multi_os/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/multi_os/</guid>
      <description>ðŸ”—Name multi_os.lua - an example script that runs on linux, MacOS, and Windows.
ðŸ”—Description multi_os is an example of how to write a script that will run on different operating systems. It uses the lua-scripts libraries to lessen the amount of code that needs to be written, as well as gaining access to tested cross-platform routines. This script also performs a function that some may find useful. It creates a button in the lighttable selected images module that extracts the embedded jpeg image from a raw file, then imports it and groups it with the raw file.</description>
    </item>
    
    <item>
      <title>panels_demo</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/panels_demo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/panels_demo/</guid>
      <description>ðŸ”—Name panels_demo.lua - an example script demonstrating how to contol panel visibility
ðŸ”—Description panels_demo is an example script showing how to control panel visibility. It cycles through the panels hiding them one by one, then showing them one by one, then hiding all, then showing all. Finally, the original panel visibility is restored.
ðŸ”—Usage  require this script from your main lua file  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>preferenceExample</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/preferenceexamples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/preferenceexamples/</guid>
      <description>ðŸ”—Name preferenceExample.lua - show the different preference types that are possible with Lua
ðŸ”—Description darktable script to show the different preference types that are possible with Lua
ðŸ”—Usage  require this script from your main lua file  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>printExamples</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/printexamples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/printexamples/</guid>
      <description>ðŸ”—Name printExamples.lua - prints &amp;ldquo;hello world&amp;rdquo; when darktable starts
ðŸ”—Description prints &amp;ldquo;hello world&amp;rdquo; to the screen when darktable starts
ðŸ”—Usage  require this file from your main lua config file:  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>running_os</title>
      <link>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/running_os/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://elstoc.github.io/luadocs/lua.scripts.manual/scripts/examples/running_os/</guid>
      <description>ðŸ”—Name running_os.lua - prints the operating system
ðŸ”—Description prints the operating system
ðŸ”—Usage  require this script from your main lua file To do this add this line to the file .config/darktable/luarc: require &amp;ldquo;running_os&amp;rdquo;  ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author Tobias Jakobs
ðŸ”—Change Log </description>
    </item>
    
  </channel>
</rss>

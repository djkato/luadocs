<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>tools on darktable lua documentation</title>
    <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/</link>
    <description>Recent content in tools on darktable lua documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>executable_manager</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/executable_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/executable_manager/</guid>
      <description>ðŸ”—Name executable_manager.lua - a tool for managing external executables used by darktable lua scripts
ðŸ”—Description executable_manager is a tool for managing the executable preferences stored in the darktablerc file. On startup the darktablerc file is scanned and a widget is built for each executable path. The user can select the executable from a drop down list and then modify the settings as desired.
Any changes made using executable_manager won&amp;rsquo;t be saved in the darktablerc file until darktable exits, but the preference is updated when the change is made so scripts will pick up the changes without restarting darktable.</description>
    </item>
    
    <item>
      <title>gen_i18n_mo</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/gen_i18n_mo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/gen_i18n_mo/</guid>
      <description>ðŸ”—Name gen_i18n_mo - generate translation files from the source and place them in the appropriate locale directory
ðŸ”—Description gen_i18n_mo finds all the .po files scattered throughout the script tree, compiles them into .mo files and places them in the correct locale directory for use by the gettext tools.
ðŸ”—Usage ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>get_lib_manpages</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_lib_manpages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_lib_manpages/</guid>
      <description>ðŸ”—Name get_lib_manpages.lua - retrieve the included library documentation and output it as man pages
ðŸ”—Description ðŸ”—Usage ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>get_libdoc</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_libdoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/get_libdoc/</guid>
      <description>ðŸ”—Name get_libdoc.lua - retrieve the included library documentation and output it
ðŸ”—Description ðŸ”—Usage ðŸ”—Additional Software Required ðŸ”—Limitations ðŸ”—Author ðŸ”—Change Log </description>
    </item>
    
    <item>
      <title>script_manager</title>
      <link>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/script_manager/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://darktable-org.github.io/luadocs/lua.scripts.manual/scripts/tools/script_manager/</guid>
      <description>ðŸ”—Name script_manager.lua - a tool for managing the darktable lua scripts
ðŸ”—Description script_manager is designed to run as a standalone script so that it may be used as a drop in luarc file in the user&amp;rsquo;s $HOME/.config/darktable ($HOME/AppData/Local/darktable on windows) directory. It may also be required from a luarc file.
On startup script_manager checks to see if there is an existing scripts directory.
If there is an existing lua scripts directory then it is read to see what scripts are present.</description>
    </item>
    
  </channel>
</rss>
